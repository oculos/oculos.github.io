<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Francis Augusto Medeiros-Logeay</title>
    <description>IT Engineer with background in IT-Law, running enthusiast</description>
    <link>https://francisaugusto.com/</link>
    <atom:link href="https://francisaugusto.com/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Wed, 27 Nov 2024 00:22:07 +0100</pubDate>
    <lastBuildDate>Wed, 27 Nov 2024 00:22:07 +0100</lastBuildDate>
    <generator>Jekyll v3.9.2</generator>
    
      <item>
        <title>Installing Matrix on Kubernetes - what they don't tell you</title>
        <description>&lt;h4 id=&quot;disclaimer&quot;&gt;Disclaimer&lt;/h4&gt;

&lt;p&gt;I am no expert on Matrix or on Kubernetes. I just happen to use Kubernetes a bit, and got recently hooked on Matrix.&lt;/p&gt;

&lt;p&gt;This is not a complete manual or guide on how to install Matrix on kubernetes. It is rather an introduction on the challenges you might experience and a heads up so you don’t make the same mistakes I made.&lt;/p&gt;

&lt;h4 id=&quot;why-are-you-writing-this&quot;&gt;Why are you writing this?&lt;/h4&gt;

&lt;p&gt;I wanted to install Matrix. I have install (and still maintain) a few opensource-based projects, specially Fediverse instances. I thought, what can’t wrong, right?&lt;/p&gt;

&lt;p&gt;In my mind, these services follow the same design pattern, which is basically:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;a web-server/streaming service&lt;/li&gt;
  &lt;li&gt;a few workers&lt;/li&gt;
  &lt;li&gt;redis&lt;/li&gt;
  &lt;li&gt;database&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;While Synapse (one of the implementations of the Matrix protocol) has these, its installation is challenge, mostly because:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;the documentation is not exactly the most idiot-proof,&lt;/li&gt;
  &lt;li&gt;the workers do not behave like other works of, say, Mastodon,&lt;/li&gt;
  &lt;li&gt;load balancing is tricky.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Of course, if you want to do something basic, &lt;a href=&quot;https://matrix.org/docs/older/understanding-synapse-hosting/&quot;&gt;the official documentation&lt;/a&gt; will get you going. But one someone installs something on a cluster, the main advantage is quick scalability. And that’s the thing there are few guidelines about on the internet.&lt;/p&gt;

&lt;p&gt;I’ll comment a few things about the last two things on that list, but first, one little note: if you don’t use Helm because, like me, you’re too lazy to learn it, do yourself a favor and learn how to use it. I got away by not using it to all the stuff I deployed (mastodon, pixelfed, bookwyrm, etc). But Matrix is a beast. It’s the kind of project you’d expect some help. I’ve seen people using &lt;a href=&quot;https://nix.dev/tutorials/nix-language.html&quot;&gt;Nix&lt;/a&gt; to maintain the deployment code, and if you speak Nix, lucky you. Someone I met on Matrix the other day send me &lt;a href=&quot;https://cgit.rory.gay/Rory-Open-Architecture.git/tree/host/Rory-nginx/services/matrix&quot;&gt;its setup&lt;/a&gt;, which is a work of art.&lt;/p&gt;

&lt;p&gt;But if you’re lazy like me, you will have a lot of yaml writing to get this done.&lt;/p&gt;

&lt;p&gt;So, get the configuration done by following the first steps of the abovementioned official documentation, and read along.&lt;/p&gt;

&lt;h4 id=&quot;the-workers&quot;&gt;The workers&lt;/h4&gt;

&lt;p&gt;Workers are the main unit when you want to scale up things. On kubernetes, a worker usually is a deployment, so one just scale up the number of replicas.&lt;/p&gt;

&lt;p&gt;It is a bit the same with Matrix, but with one caveat:&lt;/p&gt;

&lt;p&gt;Workers &lt;em&gt;need&lt;/em&gt; to have a unique name. Some of them, like the federation_sender’s, need to be explicitly referred to on the main configuration. So you cannot simply go ahead and increate the number of workers. Or, you can, provided that they can be configured with a unique name. There might be many good strategies to do so in Helm or even without it. Mine was this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; command: [&quot;/bin/sh&quot;, &quot;-c&quot;]
          args:
           - |
             sed  &quot;s/client_worker/${POD_NAME}/g&quot; /config/client.yaml &amp;gt; /tmp/client.yaml &amp;amp;&amp;amp;
             exec python -m synapse.app.generic_worker \
             --config-path=/data/homeserver.yaml \
             --config-path=/tmp/client.yaml
          ports:
            - containerPort: 8022
              name: http
            - containerPort: 9093
          volumeMounts:
            - name: client-config
              mountPath: /config
              readOnly: true
            - name: matrix-volume-claim
              mountPath: /data
      volumes:
        - name: client-config
          configMap:
            name: client-config
        - name: matrix-volume-claim
          persistentVolumeClaim:
            claimName: matrix-volume-claim
      restartPolicy: Always
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;This is how I use the image to deploy a generic worker of the type client. The config map looks like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;onfigmap.yml
apiVersion: v1
kind: ConfigMap
metadata:
  name: client-config
  namespace: matrix
data:
  client.yaml: |
    worker_name: client_worker
    worker_app: synapse.app.generic_worker
    worker_listeners:
      - type: http
        tls: false
        port: 8022
        resources:
          - names: [client,federation,media]
        bind_addresses: [&quot;0.0.0.0&quot;]
    redis:
      enabled: true
      host: 10.20.20.202
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So when scaling up, it will modify the ConfigMap when creating the pod. This is great for deployments of workers that don’t need to be on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;homeserver.yaml&lt;/code&gt;. If you need those, I suggest using StatefulSets, since their names are predictable, and add them to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;homeserver.yaml&lt;/code&gt;. Of course, unless you automate this, you need to adjust the amount of those workers on the main configuration manually if you increase or decrease them.&lt;/p&gt;

&lt;p&gt;Check the &lt;a href=&quot;https://element-hq.github.io/synapse/latest/workers.html&quot;&gt;documentation&lt;/a&gt; on workers. Some must be only a single instance, others can scale up independently (as long as their name are unique), and some needs a restart of all workers and a configuration change to work.&lt;/p&gt;

&lt;h4 id=&quot;load-balancing&quot;&gt;Load balancing&lt;/h4&gt;

&lt;p&gt;On most services, load balancing is done by redirecting traffic to some sort of web workers.&lt;/p&gt;

&lt;p&gt;On Matrix, it is more complicate than that. Load balancing here is done mostly by isolating some endpoints closely related to each other, like synchronization or federation activities, and sending them to respective workers.&lt;/p&gt;

&lt;p&gt;But besides that, two workers need more attention: federation inbound and sync.&lt;/p&gt;

&lt;p&gt;Sync is done in such a way that load balancing is optimal if it’s done by &lt;em&gt;user&lt;/em&gt;. The documentation has a few tricks on how to do that. On an nginx server, this is kinda trivial. But on the nginx ingress controller, this can be a bit more complicate.&lt;/p&gt;

&lt;p&gt;I went ahead and deployed a new ingress controller just for the matrix namespace on my cluster. That way, the rules I added won’t be applied to traffic to other services.&lt;/p&gt;

&lt;p&gt;I then added an http-snippet with the mappings mentioned on the documentation so I could get the variables to be used by nginx to do the load balancing:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apiVersion: v1
data:
  allow-snippet-annotations: &quot;true&quot;
  annotations-risk-level: Critical
  http-snippet: |
     map $arg_since $sync {
     default &quot;matrix-sync-8022&quot;;
     '' &quot;matrix-sync-initial-8022&quot;;
     }
     map $arg_access_token $accesstoken_from_urlparam {
     default   $arg_access_token;
     &quot;~syt_(?&amp;lt;username&amp;gt;.*?)_.*&quot;           $username;
     }
     map $http_authorization $mxid_localpart {
     default                              $http_authorization;
     &quot;~Bearer syt_(?&amp;lt;username&amp;gt;.*?)_.*&quot;    $username;
     &quot;&quot;                                   $accesstoken_from_urlparam;
     }
  use-forwarded-headers: &quot;true&quot;
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: matrix-ingress
    app.kubernetes.io/name: matrix-ingress
    app.kubernetes.io/part-of: matrix-ingress
    app.kubernetes.io/version: 1.12.0-beta.0
  name: ingress-nginx-controller
  namespace: matrix
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;You see that this requires predicting how nginx is going to refer to the services you create. Here, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;matrix-sync-2022&lt;/code&gt; is a deduction that the controller made by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;namespace&amp;gt;-&amp;lt;service name&amp;gt;-&amp;lt;portname&amp;gt;&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;That done, I used annotations on my ingress:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    nginx.ingress.kubernetes.io/upstream-hash-by: &quot;$mxid_localpart&quot;
    nginx.ingress.kubernetes.io/configuration-snippet: |
        if ($request_uri !~ &quot;^/_matrix/client/(unstable/org.matrix.simplified_msc3575|v5|v4|v3|r0|v1)/sync&quot; ) {
        set $proxy_upstream_name $sync;
        }
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This allows:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;sending initial synchronizations, which are heavier, to particular workers;&lt;/li&gt;
  &lt;li&gt;load balancing things by the user&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The federation inbound is nicer with load balancing by ip, so you update the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;upstream-hash-by&lt;/code&gt; with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$remoteaddr&lt;/code&gt; (I think and hope).&lt;/p&gt;

&lt;h4 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h4&gt;

&lt;p&gt;I really liked Matrix. It performs great if you don’t go to a room with 50.000 people. It’s installation, though, is very complex and granular. I heard that there are people that even create load balancing rules for a particular room, such as Matrix HQ, so that it won’t steal much processing.&lt;/p&gt;

&lt;p&gt;I hope this was useful for you.&lt;/p&gt;

</description>
        <pubDate>Tue, 26 Nov 2024 21:39:23 +0100</pubDate>
        <link>https://francisaugusto.com/2024/Matrix-on-kubernetes/</link>
        <guid isPermaLink="true">https://francisaugusto.com/2024/Matrix-on-kubernetes/</guid>
        
        <category>kubernetes</category>
        
        <category>matrix</category>
        
        <category>synapse</category>
        
        <category>element</category>
        
        
        <category>personal</category>
        
      </item>
    
      <item>
        <title>Babb.no - The Fediverse and open social networks</title>
        <description>&lt;h4 id=&quot;introduction&quot;&gt;Introduction&lt;/h4&gt;

&lt;p&gt;TL;DR: &lt;a href=&quot;https://about.babb.no&quot;&gt;About babb.no&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I really want to stop using social network in this age of algorithms, monetization of personal data and AI. I like when I am in control of my own data, where I can migrate my data wherever I want.&lt;/p&gt;

&lt;p&gt;Last year, I got to know about &lt;a href=&quot;https://joinmastodon.org&quot;&gt;Mastodon&lt;/a&gt;, a microblogging platform that gained fame just after Elon Musk bought Twitter. I decided that Mastodon was something for me, so I started &lt;a href=&quot;https://mastodon.babb.no&quot;&gt;Mastodon.babb.no&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Then I discovered &lt;a href=&quot;https://pixelfed.org&quot;&gt;Pixelfed&lt;/a&gt;. And then &lt;a href=&quot;https://friendi.ca&quot;&gt;Friendica&lt;/a&gt;. And finally &lt;a href=&quot;https://joinbookwyrm.com&quot;&gt;Bookwyrm&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The cool thing about these sites is that:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;There is no algorithm scraping my data and offering me ads to buy stuff;&lt;/li&gt;
  &lt;li&gt;no hidden use of my data and pictures;&lt;/li&gt;
  &lt;li&gt;I can focus on content rather than skipping through useless ads or content I don’t want to see,&lt;/li&gt;
  &lt;li&gt;The API’s are open, so I can do a lot of things.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The sites above work sort of an alternative to known services:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Mastodon is an alternative for Twitter/X/Threads;&lt;/li&gt;
  &lt;li&gt;Pixelfed is an alternative for Instagram;&lt;/li&gt;
  &lt;li&gt;Friendica is an anternative for Facebook;&lt;/li&gt;
  &lt;li&gt;Bookwyrm is an alternative for Goodreads.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The cool thing is that if you have a user on one of these sites, you can follow anyone on the other instances. So if I have a user on Mastodon, I can follow users on Pixelfed. And the otherway around. This is thanks to the ActivePub protocol.&lt;/p&gt;

&lt;p&gt;They are all fully functional services, though somethings are not there yet, the most notable ones being Friendica and Bookwyrm not having an iOS app (or an app at all, like Bookwyrm).&lt;/p&gt;

&lt;p&gt;I decided to self host these websites. I could have joined other instances, but I believe it’s good to give something back.&lt;/p&gt;

&lt;p&gt;My instances are:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Mastodon: &lt;a href=&quot;https://mastodon.babb.no&quot;&gt;mastodon.babb.no&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Pixelfed: &lt;a href=&quot;https://pixelfed.babb.no&quot;&gt;pixelfed.babb.no&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Friendica: &lt;a href=&quot;https://social.babb.no&quot;&gt;social.babb.no&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Boomwyrm: &lt;a href=&quot;https://bookwyrm.babb.no&quot;&gt;books.babb.no&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;nerdy-talk&quot;&gt;Nerdy talk&lt;/h3&gt;

&lt;p&gt;They were all relatively easy to install, but Bookwyrm was a bit harder as the installation was really based on Docker-compose. Since I run a kubernetes cluster, I had to adapt things a bit. I posted the whole thing on &lt;a href=&quot;https://github.com/oculos/bookwyrm-kubernetes&quot;&gt;Github&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h3&gt;

&lt;p&gt;I hope that someday we will all use social media that is community-driven, I really like social media, not less because I need a way to keep in touch with friends and family who live far. The challenge today is to get people to migrate to these opensources solutions. But now the stepping stones are in place.&lt;/p&gt;

</description>
        <pubDate>Sun, 17 Dec 2023 12:39:23 +0100</pubDate>
        <link>https://francisaugusto.com/2023/Babb-no/</link>
        <guid isPermaLink="true">https://francisaugusto.com/2023/Babb-no/</guid>
        
        <category>fediverse</category>
        
        <category>mastodon</category>
        
        <category>bookwyrm</category>
        
        <category>pixelfed</category>
        
        <category>friendica</category>
        
        
        <category>personal</category>
        
      </item>
    
      <item>
        <title>Booting a Raspberry Pi 400 from FreeNAS with Unifi</title>
        <description>&lt;h4 id=&quot;introduction&quot;&gt;Introduction&lt;/h4&gt;

&lt;p&gt;I am a hopeless collector of Raspberry Pi’s: they come out, I try to grab them. And when I saw the Raspberry Pi 400, being the nostalgic ex-Amiga user that I am, I knew I just had to buy one. My little daughter sometimes asks me to boot the Pi with RetroPie, so that she can play Road Warrior, an old Nintendo game that I used to play when I was a kid.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/2021/R400.jpg&quot; alt=&quot;The cute Raspberry Pi 400!&quot; title=&quot;The cute Raspberry Pi 400!&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Swapping those SD cards is annoying, though. And having lost a lot of work on SD cards before has made me not trust the Pi as much when I need something to be a bit more permanent.&lt;/p&gt;

&lt;p&gt;So I read that it is easy to get the Raspberry Pi booting off the network, and I decided it was time to try it.&lt;/p&gt;

&lt;p&gt;I followed these two guides:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://hackaday.com/2019/11/11/network-booting-the-pi-4/&quot;&gt;Network booting the Pi 4&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.virtuallyghetto.com/2020/07/two-methods-to-network-boot-raspberry-pi-4.html&quot;&gt;Two methods to network boot Raspberry Pi 4&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It worked fine, with two caveats:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;My Pi would not get the TFTP address from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dnsmasq&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;NSF 4 didn’t work for me (and it still doesn’t)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I use TrueNAS at home, and I have a Unifi Security Gateway, which allow me to configure some DHCP options. Doing that made my life a bit easier, actually, in that I only had to configure the NFS share and the TFTP service, and things worked.&lt;/p&gt;

&lt;p&gt;So I’ll try to sum up how I got this working, without &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dnsmasq&lt;/code&gt; and using my TrueNAS.&lt;/p&gt;

&lt;h4 id=&quot;goal&quot;&gt;Goal&lt;/h4&gt;

&lt;p&gt;My goal is to boot by Raspberry Pi 400 off my network. I want to boot RetroPie, since the obvious advantage is that I’d have even more space to roms if I need to. And this way, if I connect another Raspberry Pi to my TV, I could boot off the same share (if you do that, notice that you shouldn’t use both systems simultaneously)&lt;/p&gt;

&lt;h4 id=&quot;list-of-used-equipmentsoftware&quot;&gt;List of used equipment/software&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Raspberry Pi 400 (should work with a Raspberry Pi 4)&lt;/li&gt;
  &lt;li&gt;An SD card with RetroPie installed on it&lt;/li&gt;
  &lt;li&gt;FreeNAS/TrueNAS (for the NFS and TFTP services - you can use other servers, of course)&lt;/li&gt;
  &lt;li&gt;Unifi Security Gateway (should work with other DHCP servers - YMMV).&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;creating-the-shares-at-the-freenas&quot;&gt;Creating the shares at the FreeNAS&lt;/h4&gt;

&lt;p&gt;First, we need to create the directories where we are going to put the files the Pi will boot off:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create a new dataset on your pool. Give it a name (let’s say, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pi&lt;/code&gt;). Accept the default options. So if your pool is called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mypool&lt;/code&gt;, you will end up with a folder called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/mnt/mypool/pi&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;On the shell, do this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ mkdir -p /mnt/mypool/pi/boot
$ chmod 777 /mnt/mypool/pi/boot
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note that this is assuming I will not boot other Pi’s with different OS’s. If you want to do that, it is probably best to create a directory with the serial number of the Pi you want to boot. See Step 6 &lt;a href=&quot;https://www.virtuallyghetto.com/2020/07/two-methods-to-network-boot-raspberry-pi-4.html&quot;&gt;here&lt;/a&gt;.
The Pi first looks for its files on the remote computer on a folder with its serial number. If it doesn´t find one, it looks for the root folder. I am using this latter approach.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Now, we are going to configure the TFTP service, which is used by the Pi to load the OS:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;On the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Services&lt;/code&gt; menu of your FreeNAS/TrueNAS, enable TFTP, and edit it.&lt;/li&gt;
  &lt;li&gt;Choose the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/mnt/mypool/pi/boot&lt;/code&gt; as the folder to be shared by the TFTP service.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then we have to configure the NFS share.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;On the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Sharing&lt;/code&gt; menu, choose  &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Unix shares (NFS)&lt;/code&gt;, and click on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Add&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;On Path, choose &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/mnt/mypool/pi&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Click &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;All dirs&lt;/code&gt;, and then &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Advanced options&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;On &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Maproot user&lt;/code&gt;, choose &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;root&lt;/code&gt;, and on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Maproot group&lt;/code&gt;, choose &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wheel&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Choose the network and/or hosts that will be allowed to mount your share&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Note that security-wise these might not be the best permissions. Proceed with caution!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;There! Now your FreeNAS is configured to serve your Pi! It needs the files, though…&lt;/p&gt;

&lt;h4 id=&quot;transferring-the-files-from-the-pi&quot;&gt;Transferring the files from the Pi&lt;/h4&gt;

&lt;p&gt;The tutorials I referred to at the beginning of this article are based on an installation of a fresh image of an OS (Raspbian). I would rather copy an existing OS that I have installed on an SD card.&lt;/p&gt;

&lt;p&gt;To do that, I had to copy the contents of the two partitions of the SD card - the root and the boot partitions.&lt;/p&gt;

&lt;p&gt;I use a Mac, so the root partition is not automatically readable on macOS. But if you are using an Intel-based mac, you can do this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ brew install cask osxfuse
$ brew install ext4fuse
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This way, you can mount the root partition of the SD card after inserting it on your SD card reader:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;disklist list # check what's the name of the linux partition of the SD card - for example, disk2s2
sudo ext4fuse /dev/disk2s2 /tmp/raspberry
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;Caveat: This method has the problem that the directories are mounted as read-only. I changed a few (such as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/home&lt;/code&gt;) recursively so that they could be writeable again after copying. If you have access to a Linux machine, you’re better off just copying the files from there instead.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;If all works fine, you now have the files you need. Let’s copy the boot folder to the FreeeNAS:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ scp -r /Volumes/boot/* myuser@myfreenasaddress:/mnt/mypool/pi/boot/.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;However, due to the incompatibility of some filenames between Mac and Linux, we have to do an extra step to copy the root partition:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brew install gnu-tar
sudo gtar czf rasp.tgz /tmp/raspberry
scp rasp.tgz myuser@myfreenasaddress:/mnt/mypool/.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, on your FreeNAS:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd /mnt/mypool
tar -xzf rasp.tgz
mv raspberry/* pi/* 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;adjustments-on-the-configurations-for-booting&quot;&gt;Adjustments on the configurations for booting&lt;/h4&gt;

&lt;p&gt;Good? Good. We just need to substitute two files on your FreeNAS:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd /mnt/mypool/pi/boot
rm start4.elf
rm fixup4.dat
wget https://github.com/Hexxeh/rpi-firmware/raw/stable/start4.elf 
wget https://github.com/Hexxeh/rpi-firmware/raw/stable/fixup4.dat 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Somehow, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/home/pi&lt;/code&gt; folder got the wrong permissions set when copying the files. I believe it is because, on a Mac, ext4 partitions are read-only (when mounting with ext4fuse), so that’s probably why it happened. So let’s fix this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ chmod -R 750 /mnt/mypool/pi/home/pi
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, we going to configure the pi to mount your nfs share. Edit the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cmdline.txt&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ nano /mnt/mypool/pi/boot/cmdline.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Erase the existing configuration andcopy this one:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;console=serial0,115200 console=tty root=/dev/nfs nfsroot=192.168.1.110:/mnt/mypool/pi,vers=3 rw ip=dhcp rootwait elevator=deadline
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;There are few other configurations from the RetroPie install on this &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cmdline.txt&lt;/code&gt; file, such as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;consoleblank=0&lt;/code&gt;. This one, for example, is safe to keep, though I also removed it so I can see if there are errors while booting.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;And finally, edit the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/mnt/mypool/pi/etc/fstab&lt;/code&gt; and remove the two lines you see there with UUID mountings.&lt;/p&gt;

&lt;p&gt;There! You got the FreeNAS all configured to serve your files. Now, let’s get your Pi to boot off the network.&lt;/p&gt;

&lt;h4 id=&quot;configuring-the-pi-firmware&quot;&gt;Configuring the Pi firmware&lt;/h4&gt;

&lt;p&gt;In the tutorials I mentioned, you need to download a newer firmware to your Raspberry Pi 4 to get things working, but most Pi’s now have a newer firmware and thus are able to boot off the network. You need to configure it, though. Boot your Pi with an existing Raspbian installed, and type&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ rpi-eeprom-config --edit
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Add this option:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;BOOT_ORDER=0x21
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This will make the Pi to attempt booting off the SD card and, if it isn’t present, it will then try to boot off the ethernet. You have other boot options. For more information, check the &lt;a href=&quot;https://www.raspberrypi.org/documentation/hardware/raspberrypi/bcm2711_bootloader_config.md&quot;&gt;documentation of the bootloader&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now, we can configure something else: if you don’t want to install dnsmasq, or don’t want to configure your DHCP server to send the FreeNAS (TFTP) address to your pi on boot, you can add this configuration as well:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;TFTP_IP=192.168.1.110
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Change the above IP address to the one corresponding to your FreeNAS. If you choose to add this, you are all set, actually. Just save the configuration, reboot, then reboot again, this time without your SD card.&lt;/p&gt;

&lt;p&gt;If you’d rather have your DHCP server to send the TFTP address to your Pi, read on.&lt;/p&gt;

&lt;h4 id=&quot;configuring-your-unifi-dhcp-to-send-tftp-information&quot;&gt;Configuring your Unifi DHCP to send TFTP information&lt;/h4&gt;

&lt;p&gt;Open your Unifi Controller on your browser, and go to the Networks session on the Settings menu.
Choose the network where your Pi will be configured (for example LAN), and click on “Advanced DHCP options”. There, enter the address of your FreeNAS on the DHCP TFTP Server field:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/2021/dhcp.jpg&quot; alt=&quot;DHCP configuration&quot; title=&quot;DHCP configuration&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Save it, and bang, you are done. Now you will be able to boot your Pi off your RetroPie! I have used a bit now, and it is working as it should. I didn’t manage to upgrade it, though, probably due some permission issues, so I boot off the SD card again, did a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo apt update&lt;/code&gt; and a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo apt dist-upgrade&lt;/code&gt; and redid the copying of the files to the NAS. The best is if you install RetroPie from the scratch, using the instructions on the tutorials I mentioned (they also apply to the RetroPie, as it is Raspbian-based).&lt;/p&gt;

&lt;h4 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h4&gt;

&lt;p&gt;I really enjoyed this. I didn’t seem to get a much speedier boot, since the Raspberry 4 already reads the SD card at a higher speed. But the flexibility of dual booting, and also of being able have much more storage for my RetroPie, made this really worth it.&lt;/p&gt;

&lt;p&gt;I really hope that someone comes up with a tutorial on how to get a PXE-menu working. Probably using the &lt;a href=&quot;https://rpi4-uefi.dev&quot;&gt;UEFI firmware&lt;/a&gt; would help here, but I am not sure my OS’es would boot when UEFI is loaded, and it seems it also needs to boot the UEFI from an SD card, which is something I really want to avoid.&lt;/p&gt;

</description>
        <pubDate>Sat, 27 Mar 2021 12:20:23 +0100</pubDate>
        <link>https://francisaugusto.com/2021/Booting-Pi-From-FreeNAS/</link>
        <guid isPermaLink="true">https://francisaugusto.com/2021/Booting-Pi-From-FreeNAS/</guid>
        
        <category>freenas</category>
        
        <category>truenas</category>
        
        <category>raspberrypi</category>
        
        
        <category>personal</category>
        
      </item>
    
      <item>
        <title>Fiber at home - an adventure</title>
        <description>&lt;h4 id=&quot;a-little-background&quot;&gt;A little background&lt;/h4&gt;

&lt;p&gt;I am lucky to be inspired by very smart people at work, all the time.&lt;/p&gt;

&lt;p&gt;Almost three years ago, I wanted to buy a NAS (Network Attached Storage), as having hard isks connected to a router’s USB port wasn’t cutting it anymore. I had my eyes on a QNAP when a colleague came in with an older HP desktop and said “hey, try FreeNAS on this one, just to make sure a NAS is your thing”. Little did I know that it was the start of a lot of work, learning and joy (some of it described on my post about &lt;a href=&quot;https://francisaugusto.com/2019/Building-a-Supermicro-based-Freenas/&quot;&gt;building my homelab machine&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;It turned out that the HP desktop was too loud, not something I could keep on our living room. So I was &lt;del&gt;ordered&lt;/del&gt; asked politely to move it to the basement. Luckily my wifi still could reach the basement, but a NAS on WiFi is not a thing, really. So I was not able to play with the cool stuff like Nextcloud when the speeds were that bad.&lt;/p&gt;

&lt;p&gt;I then applied to the board of our housing association to be able to pull a cable from my flat to the basement. I got an approval, but under the condition that I had to find an existing duct to pull the cable. I wasn’t allowed to drill or otherwise make a new duct. “Piece of cake”, I thought, not knowing it was going to take me almost 2 years to get it done.&lt;/p&gt;

&lt;p&gt;Three electricians came here, plus a couple of smart friends. Nobody saw anything usable. We have old ducts used for antennas, but they go upwards, and while we also have a storage room on the loft, we have no power there to plug stuff. I thought I could use the same duct used for the cable TV, but it turns out that one also goes up to the loft.&lt;/p&gt;

&lt;p&gt;I was frustrated, as I really wanted to use my NAS. I focused then on building a silent machine that I could have on the living room, and that I managed to do, as described on the link above.&lt;/p&gt;

&lt;p&gt;But with the pandemics came home office, and I have to work on the living room. That low humming of the hard disks (which is the only noise coming out from that machine) was really annoying me. I had to fix it.&lt;/p&gt;

&lt;p&gt;I then asked permission to the board to get power on the loft, since all the ducts seemed to be going there. They gave me the permission - amazing board! - but recommended me to wait until august (this was like may 2020) since a company was going to upgrade the lights and electricity of the whole building, so it would make sense to get this done by the same company. Deal.&lt;/p&gt;

&lt;p&gt;Things got postponed, and the company started its work on our building only in December. But, as they say, good things come to those who wait: I decided to use fiber optics instead of an ethernet (cat6/7) cable, as my motherboard have SFP+ ports, and I thought it was more future proof. It turns out that the company had an employee who worked in telecom for decades and could do the job for me.&lt;/p&gt;

&lt;h4 id=&quot;the-odyssey-to-get-fiber-spliced&quot;&gt;The odyssey to get fiber spliced&lt;/h4&gt;

&lt;p&gt;The electrician came to see the flat, and to check the loft to see how to get power there. He thought it would be hard to use the duct used for tv cables, as it seemed to be tight there. And then he asked, “why don’t you use the cellar?”. I explained to him that I didn’t find any existing duct I could use to pass the cable through to the cellar.&lt;/p&gt;

&lt;p&gt;While we took the stairs down, he immediatelly looked about my entry door and asked, “what is this?”. That was a little box between the doors of the two flats. The man worked in telecom for decades, as I said, so he knows his stuff. He took some stairs, opened the little box, and bingo! He found a duct to the cellar, which was not in use and had just old telephone cables there.&lt;/p&gt;

&lt;p&gt;This is the old phone duct:
&lt;img src=&quot;../../assets/2021/telephoneduct2.jpg&quot; alt=&quot;The old phone duct!&quot; title=&quot;The old phone duct!&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We agreed then we would do the job in January 2021, as it seemed to be possible to pass the fiber cable through that duct.&lt;/p&gt;

&lt;p&gt;But then my luck went way: his company couldn’t find the appropriate cable (I wanted OM4, as I wanted to use multi mode fiber, which I kinda regret now, but I already had the multi mode transceivers). I decided to buy the cable myself.&lt;/p&gt;

&lt;p&gt;If you try to buy anything related to fiber optics in Norway as a private customer (ie. not as a company), you are basically out of luck. But finally I found a company that accepted to sell me the cable I wanted, and I had to take a 40 min ride on a bus to go there, walk on slippery roads and get the cable home. I called the guy to ask when we could start pulling the cable, but it turns out he was on a sick leave and wasn’t going to work before a few weeks. I was on my own.&lt;/p&gt;

&lt;p&gt;I asked the company where I bought the cable if they could recommended me of anyone that could do the job for me, and they gave me a name. I was skeptical, because EVERY single company I called either didn’t reply or wouldn’t take my business. But this guy agreed to come and see my building.&lt;/p&gt;

&lt;p&gt;Then we got into another problem: the duct ends up on a box on the basement that nobody had a key for.&lt;/p&gt;

&lt;p&gt;The guy, as the one previously, said he might have a key for it (it is an old box that was used back in the days by Telenor - the Norwegian telecom incumbent). Suddenly the guy disappeared! He wouldn’t reply my sms’s, and I was on my own again.&lt;/p&gt;

&lt;p&gt;I had no idea how to open this box:
&lt;img src=&quot;../../assets/2021/thebox.jpeg&quot; alt=&quot;Who can open this box?&quot; title=&quot;Who can open this box?&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Another colleague recommended an electrician, but this one wouldn’t be available before two months. He had a colleague that would call me instead, but never did.&lt;/p&gt;

&lt;p&gt;Fortunately, my colleagues are not just a source of inspiration, they helped me a lot. The same one who encouraged me to start with FreeNAS offered to see if we could pull the cable ourselves. That way, I would save a lot with the costs.&lt;/p&gt;

&lt;p&gt;It was tough: very tight ducts, lots of old wires. Still, we were not sure we could make it through the box. I bought a fish tape and an endoscopic camera to see if we could avoid opening the box, but that was a no go.&lt;/p&gt;

&lt;p&gt;Now I had to ask the board permission to ask a locksmith to open the box and change the key so we could open it. I was really relieved when I got the permission to do it. I called a locksmith, and after a few days he came and opened the thing.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/2021/openbox.jpeg&quot; alt=&quot;It's open!&quot; title=&quot;It's open!&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now my friend came home to help me, and we tried to pull the cable through the duct, and for a few minutes we thought it wasn´t going to go through, but after a few attempts, we finally reached the cellar!&lt;/p&gt;

&lt;p&gt;We then pulled the fiber cable with the help of the fish tape, and it reached my storage room! Perfect! Now I need to get this fiber spliced!&lt;/p&gt;

&lt;p&gt;Oh, the joy to see that cable come through…&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/2021/fiberarrived.jpeg&quot; alt=&quot;Oh, the joy...&quot; title=&quot;Oh, the joy...&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The thing is that I bought the cable terminated on one side, but it had to be terminated on the other side, as it would never pass the ducts with the connectors.&lt;/p&gt;

&lt;p&gt;My saga with companies specialized in fiber optics restarted: no company would splice the fibers for me, and those who had splicing machines for rent would not rent them to me (they said they only rent to other companies, not to private customers). I was getting desperate.&lt;/p&gt;

&lt;p&gt;I decided then to press the “F..it” button and buy a cheaper (which is still expensive) fiber splicing machine. Saw some on Ali Express and Banggood, and decided to get the same model from Amazon, as the delivery was faster and because, well, I trust Amazon a bit more than individual sellers on Ali Express.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/2021/Basement.jpeg&quot; alt=&quot;The basement was ready for it!&quot; title=&quot;The basement was ready for it!&quot; /&gt;&lt;/p&gt;

&lt;p&gt;My plan was to buy the machine, splice my cable, make sure it works, and then sell the machine. I’ve put it on the shopping cart on Amazon, went to the kitchen to take the bread I was baking out of the oven, and when I was coming back to finalize the shopping, I got a call from the electrician who was on a sick leave! He was back, happy that I managed to pass the cable, and he could come in two days to splice the fiber! I can’t tell you what a relief that was.&lt;/p&gt;

&lt;p&gt;He came last Friday, spliced the fibers (I got two pairs), and had everything beautifully installed down the basement. He asked me to test, and to tell him if anything was wrong.&lt;/p&gt;

&lt;p&gt;When he left, I tested, it didn’t work. Tested again, no signal. On the third time, after I inverted the connects, it worked! I got now one (possibly two, I haven’t tested the other fiber pair yet) 10Gbits/sec connection to my basement!&lt;/p&gt;

&lt;p&gt;I got my big NAS box out of our living room, connected to the switch in the basement, and came running upstairs to see if everything was ok. Ah, the joy of a quiet living room…&lt;/p&gt;

&lt;h4 id=&quot;aftermath&quot;&gt;Aftermath&lt;/h4&gt;

&lt;p&gt;I am pretty happy with my setup. It was totally worth it. Oslo is a very expensive city, so space use has to be optimized. Being able to use my storage room to house some equipment is perfect: cool temperatures, no problems with noise, and room to experiment a bit with other equipment if I want to do so.&lt;/p&gt;

&lt;p&gt;However, the bitter taste is still here: it shouldn’t have to be this hard. It is appalling to think how hard it is to get a bit of a slightly more specialized equipment when you are not a company. I could have ordered a lot from overseas, which I did in fact - &lt;a href=&quot;https://fs.com&quot;&gt;fs.com&lt;/a&gt; has an amazing service and sold me some of the patch cables I needed. But it is shocking that if a user wants to install fiber for using on an internal LAN, it might be very hard to buy the components or the get someone to do the fiber service. A part of me wishes that I should have bought that machine, so that I won’t have to rely on the good will of companies to help me if I need to service the cable, replace it, etc.&lt;/p&gt;
</description>
        <pubDate>Sat, 06 Mar 2021 15:20:23 +0100</pubDate>
        <link>https://francisaugusto.com/2021/Fiber-as-cat6-alternative-an-adventure/</link>
        <guid isPermaLink="true">https://francisaugusto.com/2021/Fiber-as-cat6-alternative-an-adventure/</guid>
        
        <category>fiber</category>
        
        <category>freenas</category>
        
        <category>truenas</category>
        
        <category>esxi</category>
        
        <category>supermicro</category>
        
        
        <category>personal</category>
        
      </item>
    
      <item>
        <title>Configuring a Linux image for Horizon instant clones, including Active Directory and NFSv4</title>
        <description>&lt;p&gt;A pool of instant clones of VDI (Virtual Desktop Interface) is the one where an image of an OS is cloned so that several users can login to a similar computer set-up. Normally, these clones are destroyed and recreated, so it is common to setup an strategy for persistent storage.&lt;/p&gt;

&lt;p&gt;VMware has provided some documentation on how to configure Linux machines for those pools of instant clones, and arguably the most challenging part is the integration with Active Directory. Most of the documentation is linked from a document called &lt;a href=&quot;https://docs.vmware.com/en/VMware-Horizon-7/7.8/linux-desktops-setup/GUID-D8E3A4AA-83E9-46A4-8BBA-824027146E93.html#GUID-D8E3A4AA-83E9-46A4-8BBA-824027146E93&quot;&gt;Integrating Linux with Active Directory&lt;/a&gt;. However, I’ve found that the documentation provided by VMWare can be a bit outdated or incomplete.&lt;/p&gt;

&lt;p&gt;One example: On &lt;a href=&quot;https://docs.vmware.com/en/VMware-Horizon-7/7.8/linux-desktops-setup/GUID-986977D4-87CE-459C-BC2A-55C0B6EA09AC.html&quot;&gt;this document&lt;/a&gt;, VMware doesn’t mention that the clones need to rejoin the domain when created, though on another &lt;a href=&quot;https://docs.vmware.com/en/VMware-Horizon-7/7.7/linux-desktops-setup/GUID-EA063015-63BB-44AE-BF66-D3ED2F1ABFF0.html&quot;&gt;document describing the procedure for RHEL&lt;/a&gt; this step is indeed mentioned.&lt;/p&gt;

&lt;p&gt;Another problem is that VMware skips the simplest of the situations, which is that AD can simply be joined by configurind SSSD correctly using ad as id_provider, auth_provider and access_provider, and not necessarily having to use &lt;a href=&quot;https://docs.vmware.com/en/VMware-Horizon-7/7.8/linux-desktops-setup/GUID-524AE8EE-1084-4F1B-A6B0-553DABA06087.html&quot;&gt;Winbind&lt;/a&gt;, &lt;a href=&quot;https://docs.vmware.com/en/VMware-Horizon-7/7.8/linux-desktops-setup/GUID-986977D4-87CE-459C-BC2A-55C0B6EA09AC.html&quot;&gt;Samba&lt;/a&gt;, &lt;a href=&quot;https://docs.vmware.com/en/VMware-Horizon-7/7.8/linux-desktops-setup/GUID-1E715FE3-0C00-45FC-B395-05D12E5D9E1A.html&quot;&gt;OpenLDAP&lt;/a&gt; or &lt;a href=&quot;https://docs.vmware.com/en/VMware-Horizon-7/7.8/linux-desktops-setup/GUID-1E715FE3-0C00-45FC-B395-05D12E5D9E1A.html&quot;&gt;LDAP authentication&lt;/a&gt; to achieve this. In other words, you can still join AD without needing to use Samba, Winbind or LDAP, so there is a way to join AD in a more straightforward way.&lt;/p&gt;

&lt;p&gt;This document attempts to supplement the information found elsewhere on how to properly configure a Linux OS image for deployment of an instant clones-pool. I used RHEL 8 here, but most of the things I mention can be used on other distros, though RHEL 8 is supported officially by Horizon 2006.&lt;/p&gt;

&lt;h3 id=&quot;summary-of-the-steps-you-need-and-what-isnt-covered-here&quot;&gt;Summary of the steps you need and what isn’t covered here&lt;/h3&gt;

&lt;p&gt;I’m going to explain the following steps, which is what you need to configure your Linux image in order to get instant clones:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Join the base (called golden image on VMWare documentation) to Active Directory&lt;/li&gt;
  &lt;li&gt;Optionally configure &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pam_mount&lt;/code&gt; so that your users get home directories mounted from an NFSv4 server&lt;/li&gt;
  &lt;li&gt;Make a decision on how you are going to save your credentials on the gold image so that the cloned images can (re)join the domain&lt;/li&gt;
  &lt;li&gt;Write a script to orchestrate the rejoining&lt;/li&gt;
  &lt;li&gt;Change the Horizon View agent configuration to run that script you created for rejoining&lt;/li&gt;
  &lt;li&gt;Shutdown the image, create a snapshot if it doesn’t have one.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With these steps, you can deploy your image.&lt;/p&gt;

&lt;p&gt;Things I don’t mention here but I assume you have done them already:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Create a user on AD for the purpose of joining other machines to AD&lt;/li&gt;
  &lt;li&gt;Create the configuration for kerberos on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/krb5.conf&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Install the Horizon View Agent for Linux&lt;/li&gt;
  &lt;li&gt;DNS is working fine, the hosts resolve to the domain you’re using, etc.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ready? Let’s do it!&lt;/p&gt;

&lt;h3 id=&quot;setting-up-the-image&quot;&gt;Setting up the image&lt;/h3&gt;

&lt;h4 id=&quot;configuring-your-etcsssdsssdconf&quot;&gt;Configuring your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/sssd/sssd.conf&lt;/code&gt;&lt;/h4&gt;

&lt;p&gt;As I said, VMware does not mention using AD as a source of authentication. Configure this by editing your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/sssd/sssd.conf&lt;/code&gt;. Here is an example of a working configuration:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;[sssd]
config_file_version = 2
domains = mydomain.com
services = nss, pam, pac, sudo

[nss]
allowed_shells = *
default_shell = /bin/bash
shell_fallback = /bin/bash
homedir_substring = /home
override_homedir = %H/%u

filter_groups = root,apache,mysql,postgres,store,palantir,palconf,mailman
filter_users = root,apache,mysql,postgres,store,palantir,mailman,ghost,priss

[domain/EXAMPLE.COM]
id_provider = ad
auth_provider = ad
access_provider = ad
autofs_provider = ad
chpass_provider = ad
ldap_id_mapping = false # You might want to set this to true, but if you have uidNumber and gidNumber on your users' records, it works well with false.
enumerate = false
dns_discovery_domain = example.com

krb5_realm = EXAMPLE.COM
krb5_renewable_lifetime = 14d
krb5_renew_interval = 3600
krb5_ccname_template = FILE:%d/krb5cc_%U
ad_gpo_map_interactive = +gdm-vmwcred
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Not all settings above are mandatory, but those are the ones that worked for us.&lt;/p&gt;

&lt;h4 id=&quot;join-the-domain&quot;&gt;Join the domain&lt;/h4&gt;

&lt;p&gt;You can join the domain on a RHEL 8 install by using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;realm join&lt;/code&gt;, but it configures a lot of the things which we already configured by hand on the sssd file. If you perform a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;realm leave&lt;/code&gt;, it ends up erasing your configuration, so I decided to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;adcli&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;But before joining the domain, it’s important to decide if, when rejoining the domain on the clones, you are going to save the credentials or if you are going to use the password. Both have its advantages and disadvantages.&lt;/p&gt;

&lt;p&gt;Using the password can be interesting if you don’t plan to build your images too often. However, it is less secure, especially if the user you use to join AD has other capabilities.&lt;/p&gt;

&lt;p&gt;Using a password to join the domain is simple:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ adcli join -U username@EXAMPLE.COM -D EXAMPLE.COM --service-name=nfs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;em&gt;Note: the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--service-name=nfs&lt;/code&gt; was used in case you are using an nfs service.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Enter your password. Then if all goes well, you will have joined the domain. Test if you got the right tickets:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ klist -ke
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If, however, you prefer to cache your credentials on the image so that it can be reused by the clones for joining the domain, follow the instructions below. Using cache means that you need to rebuild the image so that clones can be created before these cached credentials get expired.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ kinit username@EXAMPLE.COM -f -A -r 30d -l 30d -c /root/mycachedcredentials
$ adcli join --login-ccache=/root/mycachedcredentials -D EXAMPLE.COM --service-name=nfs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There, no need of typing a password, as your credentials were read from the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mycachedcredentials&lt;/code&gt; file. You can save it whenever you want.&lt;/p&gt;

&lt;p&gt;If all goes well and you joined the domain, then let’s make the final configurations.&lt;/p&gt;

&lt;h4 id=&quot;configuration-for-the-horizon-view-agent&quot;&gt;Configuration for the Horizon View Agent&lt;/h4&gt;

&lt;p&gt;Ok, as I said before, the clones need to rejoin the domain, right? This is because they will have their own hostname, other ip addresses, etc., so it needs to join AD again. We need to orchestrate this. Luckly, VMWare helps us here with some settings.&lt;/p&gt;

&lt;p&gt;What you do want to do now is to create a script that will configure your clones with some settings and join the domain.&lt;/p&gt;

&lt;p&gt;Here’s a sample script that does the trick:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#! /bin/bash
# (Re)joins machine to AD after hostname is changed when instant clones are created.
# Must be called by /etc/vmware/viewagent-custom.conf

LOG=/tmp/ad-join.log # Because logging never killed anyone...
fqdn=&quot;$(hostname).example.com&quot;
hostname=&quot;$(hostname)&quot;
echo &quot;This instant clone will joining ad...&quot; &amp;gt;&amp;gt; $LOG
echo &quot;Host: $(hostname)&quot; &amp;gt;&amp;gt; $LOG

# Set new hostnames
hostname &quot;$fqdn&quot;
cat &amp;lt;&amp;lt;EOF &amp;gt; /etc/hosts
127.0.0.1 $hostname
::1   $hostname
EOF
echo &quot;$fqdn&quot; &amp;gt; /etc/host

# Stop SSSD so that the previous keytab is released from the cache
service sssd stop
sss_cache -E
rm -rf /var/lib/sss/mc/*
rm -rf /var/lib/sss/db/*
rm -rf /var/lib/sss/pubconf/*

# (Re)join AD
rm -rf /etc/krb5.keytab
adcli join --login-ccache=/root/mycachedcredentials -D EXAMPLE.COM --service-name=nfs
test $? -eq 0 || echo &quot;Joining failed&quot; &amp;gt;&amp;gt; $LOG
sleep 5
rm -rf /root/mycachedcredentials # Why leave your credentials on that clone? 

# Restart SSSD so we can authenticate again
service sssd start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Save this as, for example, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/usr/local/bin/ad-join.sh&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you want to use a password instead of the cached credentials, change tthe adcli line above to:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;echo &quot;myfancypassword&quot; | adcli join --stdin-password -join -U username@EXAMPLE.COM -D EXAMPLE.COM --service-name=nfs
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There is one detail that you might have seen here: we’re stopping sssd and removing all its cache. This is important because the older keytab is still referred to by sssd. You get plenty of errors like this one if you don’t stop sssd and refresh the cache prior rejoining the domain:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Failed to initialize credentials using keytab [MEMORY:/etc/krb5.keytab]: Preauthentication failed. Unable to create GSSAPI-encrypted LDAP connection.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This error was driving me crazy, and if you google it, most of the information will tell you that you need to remove the /etc/krb5.keytab, delete the account on AD, etc., but actually most of these things won’t be necessary (Note that I do remove the old keytab). Stopping sssd and removing its cache prior rejoining the domain did the trick to fix this. Credits to &lt;a href=&quot;https://access.redhat.com/discussions/2880321&quot;&gt;this forum post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Now, one last step. Open &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/vmware/viewagent-custom.conf&lt;/code&gt; and edit the following lines:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;...
RunOnceScript=/usr/local/bin/ad-join.sh # or whatever the path/name you chose for your script
RunOnceScriptTimeout=120 # Adjust here if you believe that your rejoins take more than 2 minutes.
...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;That’s it! Now your image is fully configured for joining the domain. Shut it down, and create a snapshot with your modifications on vCenter, and schedule it to boot from your Horizon connection server.&lt;/p&gt;

&lt;p&gt;But if you want to mount NFS shares as home directories, do the following step before shutting down your machine:&lt;/p&gt;

&lt;h4 id=&quot;setting-up-pam_mount-for-mounting-home-directories&quot;&gt;Setting up &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pam_mount&lt;/code&gt; for mounting home directories&lt;/h4&gt;

&lt;p&gt;There are a few ways to automount home directories, such as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;autofs&lt;/code&gt;. I used &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pam_mount&lt;/code&gt;, but might change it in the future for the flexibility of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;autofs&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Using NFSv4 with kerberos is a very good solution to mount those directories. If you got a kerberized NFSv4 server, why not?&lt;/p&gt;

&lt;p&gt;With &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pam_mount&lt;/code&gt;, this was my configuration at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/security/pam_mount.conf.xml&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &amp;lt;volume
 fstype=&quot;nfs&quot;
 server=&quot;serveraddress&quot;
 uid=&quot;10000-100000&quot; 
 path=&quot;/homedir/%(USER)&quot;
 mountpoint=&quot;/home/%(USER)&quot;
 options=&quot;vers=4,sec=krb5&quot;
 noroot=&quot;0&quot;
 /&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;id=&quot;10000-10000&quot;&lt;/code&gt; - remove it or adjust it accordingly. It basically means that we restrict mounting attempt to those uid’s.&lt;/p&gt;

&lt;p&gt;Now a last configuration: . On the file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/idmapd.conf&lt;/code&gt;, enter your domain:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Domain = example.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Lastly, add the following line to the end of your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/pam.d/password-auth&lt;/code&gt; file in order to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pam_mmount&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;session     optional                                     pam_mount.so disable_pam_password disable_interactive
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Things that might go wrong with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pam_mount&lt;/code&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;SELinux is a $@#!$. Check your logs. If you use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;logout&lt;/code&gt; configuration of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pam_mount&lt;/code&gt;, it might require some adjustments of SELinux - you will which ones on your logs. I had to add two exceptions for SELinux when using pam_mount, one of them related to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ofl&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Check your DNS. Do you get reverse domain lookups working, for example?&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;final-remarks&quot;&gt;Final remarks&lt;/h3&gt;

&lt;p&gt;I hope this can help supplementing the information found on VMWare docs on how to integrate Linux to Active Directory with the purpose of offering pools of instant clones.&lt;/p&gt;

&lt;p&gt;Any remarks, comments or tips? Feel free to comment!&lt;/p&gt;

</description>
        <pubDate>Tue, 24 Nov 2020 17:20:23 +0100</pubDate>
        <link>https://francisaugusto.com/2020/Setuo-Linux-Image-for-Horizon-Instant-Clones-with-Active-Directory/</link>
        <guid isPermaLink="true">https://francisaugusto.com/2020/Setuo-Linux-Image-for-Horizon-Instant-Clones-with-Active-Directory/</guid>
        
        <category>vmware</category>
        
        <category>horizon</category>
        
        
        <category>personal</category>
        
      </item>
    
      <item>
        <title>Using FreeIPA with FreeNAS</title>
        <description>&lt;p&gt;I have long wanted to play a bit with LDAP, and got it working once on a Raspberry PI. When it finally worked, my SD card got corrupted and I lost all my hard work.&lt;/p&gt;

&lt;p&gt;I decided to play with &lt;a href=&quot;https://freeipa.org&quot;&gt;FreeIPA&lt;/a&gt;, as it takes all the complexity of setting up LDAP and its security away from the user. I am really impressed by how easy was to setup FreeIPA and to use for authenticate users on other systems.&lt;/p&gt;

&lt;p&gt;I’ve now succesfully managed to use FreeIPA to provide user directory for both &lt;a href=&quot;https://freenas.org&quot;&gt;FreeNAS&lt;/a&gt; and &lt;a href=&quot;https://nextcloud.com&quot;&gt;Nextcloud&lt;/a&gt;, though I will wait a bit to use it as my main source for authentication as it will take a bit of time to migrate my local users on those services to my directory ones.&lt;/p&gt;

&lt;p&gt;I was surprised by the lack of guidance on how to use FreeIPA with FreeNAS, so I decided to write what I learned here after reading some forums and trying some stuff.&lt;/p&gt;

&lt;p&gt;Before starting, it might be helpful to set your nameserver on FreeNAS to the one provided by FreeIPA.&lt;/p&gt;

&lt;h2 id=&quot;configuring-kerberos&quot;&gt;Configuring Kerberos&lt;/h2&gt;

&lt;p&gt;Start here, so you get things working.&lt;/p&gt;

&lt;h4 id=&quot;configure-the-kerberos-realm&quot;&gt;Configure the Kerberos Realm&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Click on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Directory Services&lt;/code&gt;, then then choose &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Kerberos Realms&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Click on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Add&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Type your REALM.&lt;/li&gt;
  &lt;li&gt;I clicked on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Advanced Mode&lt;/code&gt; and entered the kdc and Admin server, which basically are my FreeIPA server address.&lt;/li&gt;
  &lt;li&gt;Save it&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;configure-the-kerberos-keytabs&quot;&gt;Configure the Kerberos keytabs:&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;On your FreeIPA server (or on a client that has been enrolled and has the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ipa&lt;/code&gt; set of commands), type:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ipa host-add &amp;lt;yourfreenas&amp;gt; # Enter your FreeNAS FQDN here
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Get the keytab file to install on your FreeNAS:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ ipa-getkeytab -p host/yourfreenas -k freenas.keytab -e aes256-cts-hmac-sha1-96,aes128-cts-hmac-sha1-96 # you don't really need the -e and the encryption, but I used it as it worked better with some services
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Now, on your FreeNAS, go to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Directory Services&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Kerberos keytabs&lt;/code&gt; and click on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Add&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Upload the file you just created&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;configure-the-kerberos-settings&quot;&gt;Configure the Kerberos Settings&lt;/h4&gt;

&lt;p&gt;I am not sure if this is necessary, but I configured it anyway:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Go to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Directory services&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Kerberos settings&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Under &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;libdefaults Auxiliary parameters&lt;/code&gt;, write this:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;default_realm = YOURREALM # ex. MYREALM.LOCAL
dns_lookup_kdc = true
allow_weak_crypto = true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Good? Good. Now the real stuff:&lt;/p&gt;

&lt;h4 id=&quot;configuring-ldap&quot;&gt;Configuring LDAP&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Click on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Directory Services&lt;/code&gt; and choose (guess what) &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LDAP&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;On &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hostname&lt;/code&gt;, type the address of your FreeIPA server&lt;/li&gt;
  &lt;li&gt;On &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Base DN&lt;/code&gt;, write what usually is your realm’s DN: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dc=myrealm,dc=local&lt;/code&gt;, for example&lt;/li&gt;
  &lt;li&gt;Follow the documentation under “System Accounts” at &lt;a href=&quot;https://www.freeipa.org/page/HowTo/LDAP&quot;&gt;FreeIPA’s LDAP how-to&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;If you followed the previous step, you might have ended up with a biding user like this: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;uid=bidinguser,cn=sysaccounts,cn=etc,dc=myrealm,dc=local&lt;/code&gt;. Copy that under &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Bind DN&lt;/code&gt; on your FreeNAS&lt;/li&gt;
  &lt;li&gt;Enter the bind password as created following the steps above.&lt;/li&gt;
  &lt;li&gt;Click &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Advanced mode&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;On &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Kerberos realm&lt;/code&gt;, choose the realm you created&lt;/li&gt;
  &lt;li&gt;On &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Kerberos principal&lt;/code&gt;, choose the host corresponding to the keytab you created&lt;/li&gt;
  &lt;li&gt;Choose &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;START_TLS&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Check on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Enable&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Click on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Edit idmap&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Adjust the Range low and Range high values. This is important because the default values won’t reach the default range on FreeIPA. Be aware not to choose a range between 900000000 and 1000000000. The default values on FreeNAS are 20000 and 900000000, but these fall below the default values of FreeIPA. If you are using FreeIPA’s default range, choose 1000000001 and 2000000000.&lt;/li&gt;
  &lt;li&gt;You might want to repeat your User DN (same as the “Biding DN”), but it works for me without that.&lt;/li&gt;
  &lt;li&gt;You also might want to enter the URL, something like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://myfreeipaserver.local&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That’s it. Things might be working for you now!&lt;/p&gt;

&lt;p&gt;A few notes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Your directory users do not show up on your main list of users under &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Accounts&lt;/code&gt;, but they will show up whenever you have the option to choose a user.&lt;/li&gt;
  &lt;li&gt;Watch out for a little &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;i&lt;/code&gt; icon on the top-right of your FreeNAS web interface - it shows the status of your connection to directory services.&lt;/li&gt;
  &lt;li&gt;Type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;id &amp;lt;someuserfromldap&amp;gt;&lt;/code&gt; on the shell to see if you are retrieving users.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;things-i-didnt-manage-to-get-to-work&quot;&gt;Things I didn’t manage to get to work&lt;/h4&gt;

&lt;p&gt;I still haven’t managed to make NFSv4 work with FreeNAS and this setup. I am basically finding the same problems described on this &lt;a href=&quot;https://www.truenas.com/community/threads/setting-up-nfsv4-and-kerberos.86335/#post-613819&quot;&gt;forum post&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h4&gt;

&lt;p&gt;Using FreeIPA is great, and I wish I had tried it before. Having setup Nextcloud, FreeNAS, a mail server based on Postfix+Dovecot, Bitwarden, etc, it would have helped me extremly when it comes to centralize user information.&lt;/p&gt;

&lt;p&gt;Also, as I experiment a lot with some VM’s, it would have helped me to mount my home directory on new servers, so that I could skip copying files.&lt;/p&gt;

&lt;p&gt;My next step is to create a replica of FreeIPA and start migrating the systems I use to it, so that user management might become easier.&lt;/p&gt;

&lt;p&gt;Let me know if this guide helped you!&lt;/p&gt;
</description>
        <pubDate>Sun, 08 Nov 2020 19:00:23 +0100</pubDate>
        <link>https://francisaugusto.com/2020/Using-FreeIPA-with-FreeNAS/</link>
        <guid isPermaLink="true">https://francisaugusto.com/2020/Using-FreeIPA-with-FreeNAS/</guid>
        
        <category>freeipa</category>
        
        <category>ldap</category>
        
        <category>freenas</category>
        
        
        <category>personal</category>
        
      </item>
    
      <item>
        <title>Building a Supermicro-based PC for ESXi and FreeNAS</title>
        <description>&lt;h2 id=&quot;the-goal&quot;&gt;The goal&lt;/h2&gt;

&lt;p&gt;I have been using &lt;a href=&quot;https://freenas.org&quot;&gt;FreeNAS&lt;/a&gt; for almost a year, and I really enjoy it. I use it for some backups, file storage and for some of my favorite features of FreeBSD: jails. I have some jails installed, such as &lt;a href=&quot;https://nextcloud.com&quot;&gt;Nextcloud&lt;/a&gt;. Things were working fine and smoothly, until…&lt;/p&gt;

&lt;p&gt;As much as I like FreeBSD, it’s not always things work well there coming from a Linux standpoint. I created a jail hoping to run &lt;a href=&quot;https://elasticsearch.co&quot;&gt;ELK&lt;/a&gt;, but it was more complicate than it should be to run it on FreeBSD. It worked, but not the latest version. I could probably run a Linux jail, or just use FreeNAS virtualization features, but my current hardware was struggling.&lt;/p&gt;

&lt;p&gt;At the same time, due to some tasks at work, I was investigating ESXi so I could &lt;a href=&quot;http://francisaugusto.com/2019/ESXi-on-the-2018-Mac-Mini-networking/&quot;&gt;run it on a Mac&lt;/a&gt;. I abandoned the whole thing, as apparently this isn’t well suported and life is too short. So I decided it was time to build a machine just for the task.&lt;/p&gt;

&lt;p&gt;I always wanted to build my own machine, ever since I was a student and got a 486DX processor and a motherboard. A few years ago, a friend moving back home left his PC case behind, I thought I could maybe start there. None of those projects went ahead.&lt;/p&gt;

&lt;p&gt;It is a very fun task to select what to buy, but it can easily get overwhelming. Which motherboard format? Which processor? Which case? Well, I wasn’t very sure of what I wanted, so I after reading a lot on the forums and other websites, I came down with these requirements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;small form factor&lt;/li&gt;
  &lt;li&gt;quiet&lt;/li&gt;
  &lt;li&gt;10GBe Network for some future-proofing&lt;/li&gt;
  &lt;li&gt;plenty of SATA ports&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The main use for this machine will be running ESXi and FreeNAS under a VM. I also want to run 3 or 4 VM’s, one as a redundant mail server, one to replace my jail-based ELK instanse, and the others to test stuff when needed.&lt;/p&gt;

&lt;h2 id=&quot;what-to-buy&quot;&gt;What to buy?&lt;/h2&gt;

&lt;h3 id=&quot;motherboard&quot;&gt;Motherboard&lt;/h3&gt;

&lt;p&gt;I saw lots of motherboards for gaming that could possibly be used, but the feature set they have was not ideal for my project, as I won’t need a GPU, will probably need to be able to expand the memory, etc. By accident I found out the &lt;a href=&quot;https://supermicro.com&quot;&gt;Supermicro&lt;/a&gt; motherboards, and decided to go for them.&lt;/p&gt;

&lt;p&gt;Since I was hoping to build a PC aiming to run ESXi and FreeNAS as a VM, I saw how others did it, and realized quickly that it is necessary to passthrough the disks used by FreeNAS to the VM, as ZFS (the file system used by FreeNAS) needs tight control of the disks. It was very hard  to find a good documentation on how passthrough works on this scenario. For example, could I passthrough individual SATA ports? As Supermicro motherboards often come with one or two extra mini-SAS ports, could they be used for passthrough? No answers were clear cut, so I decided to order a HBA and connect it to a PCI, as it was pretty much clear that PCI passthrough would be supported.&lt;/p&gt;

&lt;p&gt;I didn’t want to passthrough all the SATA ports of the motherboard, as I want to be able to connect some storage to other VM’s. Using an HBA was not ideal as it’s a waste of abundant SATA ports that comes on those Supermicro boards, but I’d rather be safe than sorry and ordered one just in case I can’t passthrough those drives.&lt;/p&gt;

&lt;p&gt;The good thing about those gaming motherboards is that they offer lots of PCI expansion. Supermicro motherboards - at least those I wanted to use - had very few PCI slots. I fell for the &lt;a href=&quot;https://www.supermicro.com/en/products/motherboard/X11SDV-8C-TLN2F&quot;&gt;X11SDV-4C-TL&lt;/a&gt;, as it is has Mini-ITX form factor, but since I was going to use a PCI slot for the HBA, I really didn’t want to be out of PCI slots if I ever need something else. Bye-bye Mini-ITX and the Fractal Design &lt;a href=&quot;https://www.fractal-design.com/home/product/cases/node-series/node-304-white&quot;&gt;Node 304 case&lt;/a&gt; I was dreaming of. I decided to go for the Supermicro &lt;a href=&quot;https://www.supermicro.com/en/products/motherboard/X11SDV-4C-TP8F&quot;&gt;X11SDV-4C-TP8F&lt;/a&gt;, a Flex-ATX motherboard that had a few other PCI and memory slots.&lt;/p&gt;

&lt;p&gt;This wasn’t an easy choice, as apparently it is not that easy to &lt;a href=&quot;https://forums.servethehome.com/index.php?threads/cooling-the-cpu-x11sdv-4c-tln2f.22285/&quot;&gt;cool the processor on this board&lt;/a&gt;, as Supermicro doesn’t sell the cooler separately or preinstalled, or so I thought, as one can’t find it on the website. After some mails with Supermicro, they say the cooler can be ordered, but it needs to be installed by them, otherwise you can say bye bye to the warranty.&lt;/p&gt;

&lt;p&gt;Luckly for me, the Supermicro reseller in Norway, &lt;a href=&quot;https://nextron.no&quot;&gt;Nextron&lt;/a&gt;, did order everything from me, and I would get the motherboard with a preinstalled cooler. Cool (pun intended). It took, however, a bit long to get it. The motherboards with a Xeon with more than 4 cores can be ordered with a cooler in a less bureaucratic way.&lt;/p&gt;

&lt;h3 id=&quot;memory&quot;&gt;Memory&lt;/h3&gt;

&lt;p&gt;That was an easy choice - got a &lt;a href=&quot;https://www.amazon.com/gp/product/B07DFLTWN3/ref=ppx_yo_dt_b_asin_title_o01_s00?ie=UTF8&amp;amp;psc=1&quot;&gt;Supermicro certified 64gb RAM&lt;/a&gt;. I was tempted to get two 32GB modules and get the interleave going, but, well, I can always get another 64GB in the future if I need it.&lt;/p&gt;

&lt;h3 id=&quot;case&quot;&gt;Case&lt;/h3&gt;

&lt;p&gt;I really liked those Fractal Design cases, so decided to go for the &lt;a href=&quot;https://www.fractal-design.com/products/cases/node/node-804/black/&quot;&gt;Node 804&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;other-stuff&quot;&gt;Other stuff&lt;/h3&gt;

&lt;p&gt;The other equipment I ordered:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;PSU: a &lt;a href=&quot;https://www.corsair.com/us/en/Categories/Products/Power-Supply-Units/Power-Supply-Units-Advanced/RMx-Series/p/CP-9020179-NA&quot;&gt;Corsair RM750X&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Storage: &lt;a href=&quot;https://www.intel.com/content/www/us/en/products/memory-storage/solid-state-drives/consumer-ssds/6-series/ssd-660p-series.html&quot;&gt;Intel 660p SSD&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;HBA: &lt;a href=&quot;https://www.ebay.com/itm/HP-H220-6Gbps-SAS-PCI-E-3-0-HBA-LSI-9207-8i-P20-IT-Mode-for-ZFS-FreeNAS-unRAID/162862201664?ssPageName=STRK%3AMEBIDX%3AIT&amp;amp;_trksid=p2057872.m2749.l2649&quot;&gt;This one&lt;/a&gt;, as it is already flashed with the right FreeNAS-friendly firmware&lt;/li&gt;
  &lt;li&gt;a few cables to connect the HBA to the hard disks.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;the-building&quot;&gt;The building&lt;/h2&gt;

&lt;p&gt;The installation of the motherboard into the case was as smooth as it can be for a first timer. It went well. The only few things that didn’t go according to the plan was that I didn’t manage to plug some of the stuff (HDD led, Power LED) into the motherboard, as I didn’t find where to plug them. It seems there was lacking ground connections for some of the cables. I also couldn’t get a stable mount of the hard disk, as the models I have - two 8TB Seagate Ironwolf - only have four screw holes, while the cage expects a 6 screws HD. Fractal Design’s support was kind enough to send me the adapters for this new type of drive, so I’ll install them as soon as I get them.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/2019/IMG_7533.jpg&quot; alt=&quot;an over view of my installation - halfway through&quot; title=&quot;Halfway through&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Everything mounted and all, so it was the time to press the power button. Scary. It didn’t work. I haven’t connected the cables to the power supply properly, so I did that and boom, things worked!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/2019/itworks.JPG&quot; alt=&quot;It works!&quot; title=&quot;It works!&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I installed ESXi, and I noticed I could passthrough two SATA controllers, which made me thing that I had no need for the HBA I bought. Boom, I opened the case and removed the HBA. I connected the hard disks to one of the two miniSAS connectors, and to my surprise they were immediately recognized and imported by my FreeNAS VM.&lt;/p&gt;

&lt;p&gt;Overall, I am very happy with the machine, except for the noisy fan. I ordered a new fan to replace the one from Supermicro, but I don’t know if I will dare to remove the heatsink to install it. We’ll see. Now I’ve managed to follow some instructions on the net and reduced the fan speed to an acceptable noise level, while maintaining the CPU cool enough. Let’s see how that goes.&lt;/p&gt;

&lt;p&gt;UPDATE 4.9.2019: I didn’t have to remove the heatsink to replace the fan. It is a bit annoying, but it is possible to remove the fan cage only, which was much better than reapplying the thermal paste, and possibly voiding my warranty.&lt;/p&gt;

&lt;p&gt;I installed a Noctua fan that works well. It’s very silent, but I want to go back to the Supermicro cooler as soon as noise is not an issue, as it was way more efficient to cool the machine.&lt;/p&gt;

&lt;p&gt;The hard disks, however, were the culprit when it comes to the noise. When the FreeNAS VM is shut down, the machine is almost silent. I rearranged the disks, not having them all on the same cage, and it got them better airflow and temps.&lt;/p&gt;
</description>
        <pubDate>Sat, 17 Aug 2019 14:00:23 +0200</pubDate>
        <link>https://francisaugusto.com/2019/Building-a-Supermicro-based-Freenas/</link>
        <guid isPermaLink="true">https://francisaugusto.com/2019/Building-a-Supermicro-based-Freenas/</guid>
        
        <category>supermicro</category>
        
        <category>freenas</category>
        
        <category>esxi</category>
        
        
        <category>personal</category>
        
      </item>
    
      <item>
        <title>ESXi 6.7 on the 2018 Mac Mini - networking</title>
        <description>&lt;p&gt;&lt;em&gt;UPDATE&lt;/em&gt;: Aquantia went public. You can download the pre-release driver at this website &lt;a href=&quot;https://github.com/Aquantia/AQtion-esxi/releases&quot;&gt;https://github.com/Aquantia/AQtion-esxi/releases&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;My &lt;a href=&quot;https://www.uio.no&quot;&gt;workplace&lt;/a&gt; aquired a few of the 2018 Mac Mini’s so that we could upgrade our support for macOS users. Our plan was to use this machine as a cluster, ideally running ESXi on them. It was great when we read &lt;a href=&quot;https://www.virtuallyghetto.com/2018/11/esxi-on-the-new-2018-apple-mac-mini.html&quot;&gt;here&lt;/a&gt; that it appeared that ESXi 6.7 runs fine on those machines.&lt;/p&gt;

&lt;p&gt;Nevertheless it was disappointing to see that a lot of things don’t work:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The internal storage cannot be used&lt;/li&gt;
  &lt;li&gt;Thunderbolt controllers are not supported&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For us it was even worse: the model we bought has 10Gb NICs, which lacks ESXi drivers. This means that we could not even install ESXi on the Mac Mini, as the installer seems to require a driver.&lt;/p&gt;

&lt;p&gt;Well, now we managed it.&lt;/p&gt;

&lt;p&gt;Following some good tutorials &lt;a href=&quot;https://www.v-front.de/2014/12/how-to-make-your-unsupported-nic-work.html&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;http://www.vm-help.com/forum/viewtopic.php?f=34&amp;amp;t=4340&quot;&gt;here&lt;/a&gt;, I started an attempt to port the &lt;a href=&quot;https://www.aquantia.com/support/driver-download/&quot;&gt;freely available Linux drivers&lt;/a&gt; from &lt;a href=&quot;https://www.aquantia.com&quot;&gt;Aquantia&lt;/a&gt;. This was not an easy task, as VMware does not document all that well how to setup the environment for building up things. After a while, with a proper configured CentOS environment, I started the process.&lt;/p&gt;

&lt;p&gt;But then I’ve hitten a wall, and couldn’t go further. On a desperate attempt, I contacted Aquantia to see if they were interesting into porting their Linux drivers to ESXi. Well, it turns out they were, and today I finally got a candidate version that worked amazingly well on our Mac Mini’s.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://francisaugusto.com/assets/2019/mac-mini-esxi.png&quot; alt=&quot;ESXi on 10Gb Mac Mini&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I haven’t tested it exhaustively so far, let alone on a 10Gb switch, but so far, so good.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://francisaugusto.com/assets/2019/aquantia-mac-mini.png&quot; alt=&quot;aquantia&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The Aquantia folks did all the job, so I’m really grateful. From what I understand they are going to release the driver in the near future when things are ready on their side.&lt;/p&gt;

&lt;p&gt;It’s great to know that the Mac Mini can be a viable option to run ESXi. Of course, because the Mac Mini is not a supported platform for ESXi, it is uncertain how things are going to be after VMWare drops support for Vmklinux-based drivers.&lt;/p&gt;

&lt;p&gt;On top of that, somethings to notice:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I couldn’t get any storage - USB or USB-C - to work. Booting with storage plugged on a legacy USB port would do nothing at best and prevent booting at worse (I got an error once saying something aobut multiboot not being supported). Hot-plugging to USB/USB-C doesn’t get the device to show up, and booting with anything, I mean, ANYTHING, connected to a USB-C port would lead me to the purple screen of death (PSOD). So it’s gonna be either SAN or installing the ESXi on one of &lt;a href=&quot;https://www.samsung.com/semiconductor/minisite/ssd/product/portable/t5/&quot;&gt;these&lt;/a&gt; so that we can have some room for our VM’s. But maybe it needs to be &lt;a href=&quot;https://www.virten.net/2016/11/usb-devices-as-vmfs-datastore-in-vsphere-esxi-6-5/&quot;&gt;manually mounted&lt;/a&gt;?&lt;/li&gt;
  &lt;li&gt;The Aquantia driver worked fine on the internal NIC, but I couldn’t make the Apple USB Ethernet adapters to work - &lt;del&gt;these adapters apparently also use chipset from Aquantia&lt;/del&gt; these adapters use ASIX chipset ax88772A, not supported by the usb nic driver mentioned below, though it would be nice to test a legacy USB (not USB-C) adapter. Booting with a Realtek-based USB-C Ethernet adapter just gets me a PSOD, and I don’t have a Realtek based USB adapter, so I couldn’t test the &lt;a href=&quot;https://labs.vmware.com/flings/usb-network-native-driver-for-esxi&quot;&gt;USB NIC driver&lt;/a&gt;. I did inject it on my ISO, though.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Long story short, things look promising. Due to Apple licensing terms, we can only run a virtualized instance of macOS on Apple hardware. Using macOS VM’s could help us on our job, and the nice work of Aquantia is going to make that possible.&lt;/p&gt;

&lt;p&gt;Leave a message in the comments if you too are contemplating running ESXi on a 10Gb Mac Mini!&lt;/p&gt;

&lt;p&gt;(UPDATED on 13.3.2019 to correct info on Apple’s USB Ethernet adapter.)
(UPDATEd on 6.4.2019 to include information about the public availability of the driver.)&lt;/p&gt;
</description>
        <pubDate>Tue, 12 Mar 2019 19:34:23 +0100</pubDate>
        <link>https://francisaugusto.com/2019/ESXi-on-the-2018-Mac-Mini-networking/</link>
        <guid isPermaLink="true">https://francisaugusto.com/2019/ESXi-on-the-2018-Mac-Mini-networking/</guid>
        
        <category>esxi</category>
        
        <category>mac-mini</category>
        
        <category>aquantia</category>
        
        
        <category>personal</category>
        
      </item>
    
      <item>
        <title>WiFi Temperature Monitor</title>
        <description>&lt;p&gt;After finishing my &lt;a href=&quot;http://francisaugusto.com/2017/Homebrige-nexa-and-Udoo/&quot;&gt;previous project&lt;/a&gt;, I decided it was time to put a temperature sensor at my daughter’s room. Despite living in Norway for a while, I still suspect it is just colder than it should be.&lt;/p&gt;

&lt;p&gt;My goal was to transmit the temperature of her room to our &lt;a href=&quot;https://github.com/nfarina/homebridge&quot;&gt;Homebridge&lt;/a&gt;, so we could check it on our phone. I also wanted a solution that would allow me to switch the radio transmitter while not transferring data.&lt;/p&gt;

&lt;p&gt;I had a couple of DHT11 sensors around, and I decided to try the &lt;a href=&quot;https://www.sparkfun.com/products/13678&quot;&gt;ESP8266-01&lt;/a&gt;. I got them at &lt;a href=&quot;https://www.kjell.com&quot;&gt;Kjell &amp;amp; Co.&lt;/a&gt;, and, as usual, when going there I end up buying more than I need, so I got this &lt;a href=&quot;https://www.kjell.com/no/produkter/elektro-og-verktoy/elektronikk/optokomponenter/led-lcd-skjermer/luxorparts-grafisk-oled-skjerm-128-x-64-piksler-0-96--p87945&quot;&gt;OLED screen&lt;/a&gt;, which I then thought I could use to display the temperature (and humidity, since the DHT11 provides that as well) without my phone.&lt;/p&gt;

&lt;p&gt;The ESP8266 is used mainly to read the sensor and transmit the data to the computer running Homebridge. It transmits UDP packets, to make it simple. On the computer side, I use a small NodeJS app to receive the packets (and send and ACK back).&lt;/p&gt;

&lt;p&gt;I had a couple of Arduino Mini’s at home, which I never used because they didn’t have soldered pins to the GPIO’s. But I manned up and soldered some pins to it. Not the nicest job I ever did, but nothing got broken in the process.&lt;/p&gt;

&lt;p&gt;I added a button to the circuit, so that we could read the temperature with the touch of a button.&lt;/p&gt;

&lt;p&gt;It works like this:&lt;/p&gt;

&lt;p&gt;ESP8266: It keeps reading the sensor all the time, and transmitting the data via serial to the Arduino. In addition to that, the data is sent by WiFi to the Homebridge. The radio turns itself on, connects to the network, sends the packets and, upon after getting the confirmation that the packets were received, it turns itself off for 1 minute.&lt;/p&gt;

&lt;p&gt;Arduino: It receives the temperature and humidity info fromthe ESP8266, and then it shows it on a screen. The screen is off, and is turned on for 10 seconds when a button is pressed.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://francisaugusto.com/assets/ESP8266.JPG&quot; alt=&quot;It looks shabby, but it works&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It is not very elegant, because there was no space to put the Arduino on the small breadboard. I wanna improve it later by:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;changing the power supply to a small circuit to provide power (with voltage regulator and capacitors);&lt;/li&gt;
  &lt;li&gt;put an ATMega chip on the breadboard instead of an arduino.&lt;/li&gt;
  &lt;li&gt;order a pcb?&lt;/li&gt;
  &lt;li&gt;Get rid of the arduino and use a bigger ESP8266 instead.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 29 Dec 2017 20:13:23 +0100</pubDate>
        <link>https://francisaugusto.com/2017/WiFi-Temperature-Monitor/</link>
        <guid isPermaLink="true">https://francisaugusto.com/2017/WiFi-Temperature-Monitor/</guid>
        
        <category>projects</category>
        
        <category>homebridge</category>
        
        <category>arduino</category>
        
        <category>ESP8266</category>
        
        
        <category>personal</category>
        
      </item>
    
      <item>
        <title>Homebridge, Nexa switches and Udoo Neo</title>
        <description>&lt;p&gt;The year is ending and I would like to finish it with a cool project.&lt;/p&gt;

&lt;p&gt;I am a sucker for gadgets, especially small cheap computers like the &lt;a href=&quot;https://www.raspberrypi.org&quot;&gt;Raspberry Pi&lt;/a&gt;. Some years ago, I contributed to a &lt;a href=&quot;https://Kickstarter.com&quot;&gt;Kickstarter&lt;/a&gt; project called &lt;a href=&quot;https://www.udoo.org/get-started-neo/&quot;&gt;Udoo Neo&lt;/a&gt;, which is a credit-sized computer + Arduino. It also came with some sensors for measuring the temperature and barometric pressure. I used it as a tool to monitor the temperature on our living room and to run some experiments.&lt;/p&gt;

&lt;p&gt;I have lots of &lt;a href=&quot;https://arduino.cc&quot;&gt;Arduino boards&lt;/a&gt; that I used on other projects, such as an automatic system to water my plants. I wanted to experiment with 433mhz transmitters, mostly because they are cheap and I wanted to use them to study basic network concepts.&lt;/p&gt;

&lt;p&gt;On my flat we have some lights on our living room that are plugged to outlets and controlled via remote control. I use a cheap &lt;a href=&quot;https://nexa.se&quot;&gt;Nexa&lt;/a&gt; PE-3 kit. &lt;a href=&quot;https://www.clasohlson.com/no/Nexa-PE-3-3-pack-fjernstrømbrytere/36-4602&quot;&gt;This&lt;/a&gt; is the exact model.&lt;/p&gt;

&lt;p&gt;I realized that those Nexa outlets use the 433mhz frequency, so I kept thinking about controlling the lights plugged into them with an Arduino at some point, but didn’t have a reason for that (other than the gimmick aspect of it). That changed when I came across &lt;a href=&quot;https://medium.com/arvin-singla/apple-homekit-hacking-3d2902e7a1df&quot;&gt;this post&lt;/a&gt;, where the author describes how he used &lt;a href=&quot;https://github.com/nfarina/homebridge&quot;&gt;Homebridge&lt;/a&gt; to control his remote lights. But what is Homebridge?&lt;/p&gt;

&lt;p&gt;Well, if you are an Apple-fanboy like me, you know that Apple has a technology called HomeKit that allows you to control devices on your home from your iPhone, iPad or Apple TV. But there are not so many devices available for HomeKit yet, and those that are available  are expensive. Enter Homebridge, an open source project that allows you to create your own accessories for HomeKit. You see where I am going: if I can control my outlets with Arduino, maybe I could connect that with Homebridge and ta-daaa, I would be able to switch my lights on and off (as well as I could see my room’s temperature on my phone using a temperature sensor connected to the Udoo).&lt;/p&gt;

&lt;p&gt;As I said, I had an Udoo laying around, and lots of cheap 433 receivers and transmitters. So my goal was:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;to control my light switches with my Udoo Neo;&lt;/li&gt;
  &lt;li&gt;to install Homebridge on the Udoo Neo;&lt;/li&gt;
  &lt;li&gt;to be able to control my lights switches via my iPhone.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;controlling-my-light-switches-with-udoo-neo&quot;&gt;Controlling my light switches with Udoo Neo&lt;/h3&gt;

&lt;p&gt;There are many cool projects for the Arduino that allow you to record the commands you send from a 433mhz remote control and to send those command backs. Before trying with my Udoo Neo, I tried first with my Arduino, and these sketches/products worked fine:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://fritzing.org/media/fritzing-repo/projects/n/nexardu-illumination-smart-control/code/&quot;&gt;Sketches to learn and send back commands&lt;/a&gt;, which is a modification of &lt;a href=&quot;http://playground.arduino.cc/Code/HomeEasy&quot;&gt;this&lt;/a&gt;. I used &lt;a href=&quot;http://fritzing.org/media/fritzing-repo/projects/n/nexardu-illumination-smart-control/code/Nexa_Ok_3_RX.ino&quot;&gt;this sketch&lt;/a&gt; to learn the codes of my remote control, and then I used &lt;a href=&quot;https://github.com/calle-gunnarsson/NexaCtrl&quot;&gt;NexaCtrl&lt;/a&gt; to actually send the commands.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://433mhz.codeplex.com/SourceControl/latest#rc-switch-fork/RCTransmitter.cpp&quot;&gt;rc-switch-fork&lt;/a&gt; worked great as well. The original &lt;a href=&quot;https://github.com/sui77/rc-switch/wiki&quot;&gt;rc-switch&lt;/a&gt; didn’t work.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The problem is that &lt;em&gt;none of those worked on my Udoo Neo&lt;/em&gt;. You see, the Arduino on the Udoo Neo is not based on the AVR architecture of the “common” arduinos. Therefore, the solutions above didn’t work with my Udoo Neo. I suspect the libraries used by those packages rely on stuff available only to Arduinos based on AVR. I could simply connect an Arduino to the Udoo Neo and get this done, but I thought it would be a waste of resources.&lt;/p&gt;

&lt;p&gt;I then decided to give &lt;a href=&quot;http://arduinobasics.blogspot.no/2014/06/433-mhz-rf-module-with-arduino-tutorial.html&quot;&gt;this great tutorial&lt;/a&gt; a try. I have bookmarked it a while ago because it is not a tutorial for a ready-made solution - well, it offers that as well - but remember when I said I wanted to study some basic network concepts? This tutorial teaches how to recognize basic signals typically used for this kind of communication between devices and I always thought I could try to replicate what he did one day. Well, this day has come.&lt;/p&gt;

&lt;p&gt;What I did was that I used the &lt;a href=&quot;http://arduinobasics.blogspot.no/2014/07/433-mhz-rf-module-with-arduino-tutorial_30.html&quot;&gt;code he made to learn commands from a remote control&lt;/a&gt;, then I printed the array of each command for my remote control on Arduino’s serial monitor, and created another sketch where I hard coded the commands by pasting the array so that I could send these codes. Not super elegant, but it works.&lt;/p&gt;

&lt;p&gt;Since using the Arduino interface on the Udoo Neo is irritating (I access it via VNC), I decided to read the commands on an Arduino connected to my Mac, and transfer a sketch with the codes to the Udoo Neo. That sketch would read the serial interface, and when it receives a certain instruction from the Linux side of the Udoo Neo, it would then send the right code to turn a specific light on or off. The same scenario as if one were using a Raspberry Pi connected to an Arduino. It is also possible to send those signals using a Raspberry Pi, without an Arduino. I might try that at some point.&lt;/p&gt;

&lt;p&gt;It worked! It wasn’t as reliable as on the Arduino connected to my Mac - I have to power off the transmitter every time I am not using it, but it worked.&lt;/p&gt;

&lt;p&gt;Then I created a python script to send the commands via serial to the built-in Arduino of the Udoo Neo. Something like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; python lightcontrol.py 1 off # turn the light 1 off
Light 1 is off
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After that was done, it was time to install Homebridge.&lt;/p&gt;

&lt;h3 id=&quot;installing-homebridge-on-the-udoo-neo&quot;&gt;Installing Homebridge on the Udoo Neo&lt;/h3&gt;

&lt;p&gt;I did it following &lt;a href=&quot;https://github.com/nfarina/homebridge/wiki/Running-HomeBridge-on-a-Raspberry-Pi&quot;&gt;this tutorial here&lt;/a&gt;. One note: make sure you are installing the absolutely latest version of NodeJS.&lt;/p&gt;

&lt;p&gt;I wasn’t familiar with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm&lt;/code&gt;, so I found strange that on the docs of the project or on &lt;a href=&quot;http://blog.theodo.fr/2017/08/make-siri-perfect-home-companion-devices-not-supported-apple-homekit/&quot;&gt;this excellent guide on how to write a Homebridge plugin&lt;/a&gt; it was always suggested to publish plugins to a plugin repository. I didn’t do it. I simply created a local plugin by creating a directory on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/usr/lib/node_modules&lt;/code&gt;, and then I created the proper &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.js&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt;. I don’t see a reason to make my plugin public, as I imagine that my solution is very tied to the system I am using. Of course, if anyone feels he might benefit from it, just drop me a note. Remember:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Your plugin must start with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;homebridge&lt;/code&gt;, for example, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;homebridge-myplugin&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Do not follow the code he shows on the tutorial, but rather &lt;a href=&quot;https://github.com/fredericbarthelet/homebridge-smappee/blob/master/index.js&quot;&gt;the code he actually wrote for his project&lt;/a&gt;. I found it more up to date.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The result is that now I can control all the lights on my room with my iPhone/Apple watch, even with Siri, with very cheap equipment I already had!&lt;/p&gt;

&lt;p&gt;This is how it looks:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://francisaugusto.com/assets/homebridge.png&quot; alt=&quot;This is how it looks&quot; /&gt;&lt;/p&gt;

&lt;p&gt;My &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.js&lt;/code&gt; file looks like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Service&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Characteristic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;homebridge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;Service&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;homebridge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Service&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;Characteristic&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;homebridge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Characteristic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;homebridge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;registerAccessory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;homebridge-lightcontroller&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;LightController&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myLightController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;homebridge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;registerAccessory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;homebridge-lightcontroller&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Temperature&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;myTemperature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myTemperature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serviceAccessory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Service&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AccessoryInformation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serviceAccessory&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setCharacteristic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Characteristic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Manufacturer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Francis&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serviceTemp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Service&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;TemperatureSensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Living room temperature&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serviceTemp&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getCharacteristic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Characteristic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CurrentTemperature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getTemp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;myTemperature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getServices&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serviceAccessory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serviceTemp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;myTemperature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getTemp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;readFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;/sys/class/i2c-dev/i2c-1/device/1-0048/temp1_input&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;utf8&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;parseFloat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myLightController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;acc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;acc&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serviceAccessory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Service&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AccessoryInformation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serviceAccessory&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setCharacteristic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Characteristic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Manufacturer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Francis&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serviceSwitch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Service&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Switch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;My Light Controller&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serviceSwitch&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getCharacteristic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Characteristic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;On&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setPowerState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;myLightController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getServices&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serviceAccessory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serviceSwitch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;myLightController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setPowerState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;onOff&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;onOff&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;onOff&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;off&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;comm&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;acc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onOff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serviceAccessory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Service&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AccessoryInformation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serviceAccessory&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setCharacteristic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Characteristic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Manufacturer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Francis&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serviceSwitch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Service&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Switch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;My Light Controller&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serviceSwitch&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getCharacteristic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Characteristic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;On&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setPowerState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;myLightController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getServices&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
       &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serviceAccessory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serviceSwitch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;myLightController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setPowerState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;onOff&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
       &lt;span class=&quot;nx&quot;&gt;onOff&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
       &lt;span class=&quot;nx&quot;&gt;onOff&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;off&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;comm&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;acc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onOff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;child_process&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;comm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stderr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
       &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                 &lt;span class=&quot;c1&quot;&gt;// node couldn't execute the command&lt;/span&gt;
                 &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The only caveat with this system is that if I turn the light off using the remote control, the state of the lamp on the Home app will not reflect the actual state. This is the only limitation, and it can be a problem if you are considering some form for automation, as the system might skip turning something on as the state is already on.&lt;/p&gt;
</description>
        <pubDate>Fri, 29 Dec 2017 20:13:23 +0100</pubDate>
        <link>https://francisaugusto.com/2017/Homebrige-nexa-and-Udoo/</link>
        <guid isPermaLink="true">https://francisaugusto.com/2017/Homebrige-nexa-and-Udoo/</guid>
        
        <category>projects</category>
        
        <category>homebridge</category>
        
        
        <category>personal</category>
        
      </item>
    
  </channel>
</rss>
