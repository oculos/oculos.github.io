<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Francis Augusto Medeiros-Logeay</title>
    <description>IT Engineer with background in IT-Law, running enthusiast</description>
    <link>http://francisaugusto.com/</link>
    <atom:link href="http://francisaugusto.com/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Sun, 08 Nov 2020 20:02:19 +0100</pubDate>
    <lastBuildDate>Sun, 08 Nov 2020 20:02:19 +0100</lastBuildDate>
    <generator>Jekyll v3.8.7</generator>
    
      <item>
        <title>Using FreeIPA with FreeNAS</title>
        <description>&lt;p&gt;I have long wanted to play a bit with LDAP, and got it working once on a Raspberry PI. When it finally worked, my SD card got corrupted and I lost all my hard work.&lt;/p&gt;

&lt;p&gt;I decided to play with &lt;a href=&quot;https://freeipa.org&quot;&gt;FreeIPA&lt;/a&gt;, as it takes all the complexity of setting up LDAP and its security away from the user. I am really impressed by how easy was to setup FreeIPA and to use for authenticate users on other systems.&lt;/p&gt;

&lt;p&gt;I’ve now succesfully managed to use FreeIPA to provide user directory for both &lt;a href=&quot;https://freenas.org&quot;&gt;FreeNAS&lt;/a&gt; and &lt;a href=&quot;https://nextcloud.com&quot;&gt;Nextcloud&lt;/a&gt;, though I will wait a bit to use it as my main source for authentication as it will take a bit of time to migrate my local users on those services to my directory ones.&lt;/p&gt;

&lt;p&gt;I was surprised by the lack of guidance on how to use FreeIPA with FreeNAS, so I decided to write what I learned here after reading some forums and trying some stuff.&lt;/p&gt;

&lt;p&gt;Before starting, it might be helpful to set your nameserver on FreeNAS to the one provided by FreeIPA.&lt;/p&gt;

&lt;h2 id=&quot;configuring-kerberos&quot;&gt;Configuring Kerberos&lt;/h2&gt;

&lt;p&gt;Start here, so you get things working.&lt;/p&gt;

&lt;h4 id=&quot;configure-the-kerberos-realm&quot;&gt;Configure the Kerberos Realm&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Click on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Directory Services&lt;/code&gt;, then then choose &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Kerberos Realms&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Click on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Add&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Type your REALM.&lt;/li&gt;
  &lt;li&gt;I clicked on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Advanced Mode&lt;/code&gt; and entered the kdc and Admin server, which basically are my FreeIPA server address.&lt;/li&gt;
  &lt;li&gt;Save it&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;configure-the-kerberos-keytabs&quot;&gt;Configure the Kerberos keytabs:&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;On your FreeIPA server (or on a client that has been enrolled and has the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ipa&lt;/code&gt; set of commands), type:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ipa host-add &amp;lt;yourfreenas&amp;gt; # Enter your FreeNAS FQDN here
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Get the keytab file to install on your FreeNAS:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ipa-getkeytab -p host/yourfreenas -k freenas.keytab -e aes256-cts-hmac-sha1-96,aes128-cts-hmac-sha1-96 # you don't really need the -e and the encryption, but I used it as it worked better with some services
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Now, on your FreeNAS, go to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Directory Services&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Kerberos keytabs&lt;/code&gt; and click on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Add&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Upload the file you just created&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;configure-the-kerberos-settings&quot;&gt;Configure the Kerberos Settings&lt;/h4&gt;

&lt;p&gt;I am not sure if this is necessary, but I configured it anyway:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Go to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Directory services&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Kerberos settings&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Under &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;libdefaults Auxiliary parameters&lt;/code&gt;, write this:&lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;default_realm = YOURREALM # ex. MYREALM.LOCAL
dns_lookup_kdc = true
allow_weak_crypto = true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Good? Good. Now the real stuff:&lt;/p&gt;

&lt;h4 id=&quot;configuring-ldap&quot;&gt;Configuring LDAP&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;Click on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Directory Services&lt;/code&gt; and choose (guess what) &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LDAP&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;On &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hostname&lt;/code&gt;, type the address of your FreeIPA server&lt;/li&gt;
  &lt;li&gt;On &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Base DN&lt;/code&gt;, write what usually is your realm’s DN: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dc=myrealm,dc=local&lt;/code&gt;, for example&lt;/li&gt;
  &lt;li&gt;Follow the documentation under “System Accounts” at &lt;a href=&quot;https://www.freeipa.org/page/HowTo/LDAP&quot;&gt;FreeIPA’s LDAP how-to&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;If you followed the previous step, you might have ended up with a biding user like this: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;uid=bidinguser,cn=sysaccounts,cn=etc,dc=myrealm,dc=local&lt;/code&gt;. Copy that under &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Bind DN&lt;/code&gt; on your FreeNAS&lt;/li&gt;
  &lt;li&gt;Enter the bind password as created following the steps above.&lt;/li&gt;
  &lt;li&gt;Click &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Advanced mode&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;On &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Kerberos realm&lt;/code&gt;, choose the realm you created&lt;/li&gt;
  &lt;li&gt;On &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Kerberos principal&lt;/code&gt;, choose the host corresponding to the keytab you created&lt;/li&gt;
  &lt;li&gt;Choose &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;START_TLS&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Check on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Enable&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Click on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Edit idmap&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Adjust the Range low and Range high values. This is important because the default values won’t reach the default range on FreeIPA. Be aware not to choose a range between 900000000 and 1000000000. The default values on FreeNAS are 20000 and 900000000, but these fall below the default values of FreeIPA. If you are using FreeIPA’s default range, choose 1000000001 and 2000000000.&lt;/li&gt;
  &lt;li&gt;You might want to repeat your User DN (same as the “Biding DN”), but it works for me without that.&lt;/li&gt;
  &lt;li&gt;You also might want to enter the URL, something like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://myfreeipaserver.local&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;That’s it. Things might be working for you now!&lt;/p&gt;

&lt;p&gt;A few notes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Your directory users do not show up on your main list of users under &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Accounts&lt;/code&gt;, but they will show up whenever you have the option to choose a user.&lt;/li&gt;
  &lt;li&gt;Watch out for a little &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;i&lt;/code&gt; icon on the top-right of your FreeNAS web interface - it shows the status of your connection to directory services.&lt;/li&gt;
  &lt;li&gt;Type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;id &amp;lt;someuserfromldap&amp;gt;&lt;/code&gt; on the shell to see if you are retrieving users.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;things-i-didnt-succeed&quot;&gt;Things I didn’t succeed&lt;/h4&gt;

&lt;p&gt;I still haven’t managed to make NFSv4 work with FreeNAS and this setup. I am basically finding the same problems described on this &lt;a href=&quot;https://www.truenas.com/community/threads/setting-up-nfsv4-and-kerberos.86335/#post-613819&quot;&gt;forum post&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h4&gt;

&lt;p&gt;Using FreeIPA is great, and I wish I had tried it before. Having setup Nextcloud, FreeNAS, a mail server based on Postfix+Dovecot, Bitwarden, etc, it would have helped me extremly when it comes to centralize user information.&lt;/p&gt;

&lt;p&gt;Also, as I experiment a lot with some VM’s, it would have helped me to mount my home directory on new servers, so that I could skip copying files.&lt;/p&gt;

&lt;p&gt;My next step is to create a replica of FreeIPA and start migrating the systems I use to it, so that user management might become easier.&lt;/p&gt;

&lt;p&gt;Let me know if this guide helped you!&lt;/p&gt;
</description>
        <pubDate>Sun, 08 Nov 2020 19:00:23 +0100</pubDate>
        <link>http://francisaugusto.com/2020/Using-FreeIPA-with-FreeNAS/</link>
        <guid isPermaLink="true">http://francisaugusto.com/2020/Using-FreeIPA-with-FreeNAS/</guid>
        
        <category>freeipa</category>
        
        <category>ldap</category>
        
        <category>freenas</category>
        
        
        <category>personal</category>
        
      </item>
    
      <item>
        <title>Building a Supermicro-based PC for ESXi and FreeNAS</title>
        <description>&lt;h2 id=&quot;the-goal&quot;&gt;The goal&lt;/h2&gt;

&lt;p&gt;I have been using &lt;a href=&quot;https://freenas.org&quot;&gt;FreeNAS&lt;/a&gt; for almost a year, and I really enjoy it. I use it for some backups, file storage and for some of my favorite features of FreeBSD: jails. I have some jails installed, such as &lt;a href=&quot;https://nextcloud.com&quot;&gt;Nextcloud&lt;/a&gt;. Things were working fine and smoothly, until…&lt;/p&gt;

&lt;p&gt;As much as I like FreeBSD, it’s not always things work well there coming from a Linux standpoint. I created a jail hoping to run &lt;a href=&quot;https://elasticsearch.co&quot;&gt;ELK&lt;/a&gt;, but it was more complicate than it should be to run it on FreeBSD. It worked, but not the latest version. I could probably run a Linux jail, or just use FreeNAS virtualization features, but my current hardware was struggling.&lt;/p&gt;

&lt;p&gt;At the same time, due to some tasks at work, I was investigating ESXi so I could &lt;a href=&quot;http://francisaugusto.com/2019/ESXi-on-the-2018-Mac-Mini-networking/&quot;&gt;run it on a Mac&lt;/a&gt;. I abandoned the whole thing, as apparently this isn’t well suported and life is too short. So I decided it was time to build a machine just for the task.&lt;/p&gt;

&lt;p&gt;I always wanted to build my own machine, ever since I was a student and got a 486DX processor and a motherboard. A few years ago, a friend moving back home left his PC case behind, I thought I could maybe start there. None of those projects went ahead.&lt;/p&gt;

&lt;p&gt;It is a very fun task to select what to buy, but it can easily get overwhelming. Which motherboard format? Which processor? Which case? Well, I wasn’t very sure of what I wanted, so I after reading a lot on the forums and other websites, I came down with these requirements:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;small form factor&lt;/li&gt;
  &lt;li&gt;quiet&lt;/li&gt;
  &lt;li&gt;10GBe Network for some future-proofing&lt;/li&gt;
  &lt;li&gt;plenty of SATA ports&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The main use for this machine will be running ESXi and FreeNAS under a VM. I also want to run 3 or 4 VM’s, one as a redundant mail server, one to replace my jail-based ELK instanse, and the others to test stuff when needed.&lt;/p&gt;

&lt;h2 id=&quot;what-to-buy&quot;&gt;What to buy?&lt;/h2&gt;

&lt;h3 id=&quot;motherboard&quot;&gt;Motherboard&lt;/h3&gt;

&lt;p&gt;I saw lots of motherboards for gaming that could possibly be used, but the feature set they have was not ideal for my project, as I won’t need a GPU, will probably need to be able to expand the memory, etc. By accident I found out the &lt;a href=&quot;https://supermicro.com&quot;&gt;Supermicro&lt;/a&gt; motherboards, and decided to go for them.&lt;/p&gt;

&lt;p&gt;Since I was hoping to build a PC aiming to run ESXi and FreeNAS as a VM, I saw how others did it, and realized quickly that it is necessary to passthrough the disks used by FreeNAS to the VM, as ZFS (the file system used by FreeNAS) needs tight control of the disks. It was very hard  to find a good documentation on how passthrough works on this scenario. For example, could I passthrough individual SATA ports? As Supermicro motherboards often come with one or two extra mini-SAS ports, could they be used for passthrough? No answers were clear cut, so I decided to order a HBA and connect it to a PCI, as it was pretty much clear that PCI passthrough would be supported.&lt;/p&gt;

&lt;p&gt;I didn’t want to passthrough all the SATA ports of the motherboard, as I want to be able to connect some storage to other VM’s. Using an HBA was not ideal as it’s a waste of abundant SATA ports that comes on those Supermicro boards, but I’d rather be safe than sorry and ordered one just in case I can’t passthrough those drives.&lt;/p&gt;

&lt;p&gt;The good thing about those gaming motherboards is that they offer lots of PCI expansion. Supermicro motherboards - at least those I wanted to use - had very few PCI slots. I fell for the &lt;a href=&quot;https://www.supermicro.com/en/products/motherboard/X11SDV-8C-TLN2F&quot;&gt;X11SDV-4C-TL&lt;/a&gt;, as it is has Mini-ITX form factor, but since I was going to use a PCI slot for the HBA, I really didn’t want to be out of PCI slots if I ever need something else. Bye-bye Mini-ITX and the Fractal Design &lt;a href=&quot;https://www.fractal-design.com/home/product/cases/node-series/node-304-white&quot;&gt;Node 304 case&lt;/a&gt; I was dreaming of. I decided to go for the Supermicro &lt;a href=&quot;https://www.supermicro.com/en/products/motherboard/X11SDV-4C-TP8F&quot;&gt;X11SDV-4C-TP8F&lt;/a&gt;, a Flex-ATX motherboard that had a few other PCI and memory slots.&lt;/p&gt;

&lt;p&gt;This wasn’t an easy choice, as apparently it is not that easy to &lt;a href=&quot;https://forums.servethehome.com/index.php?threads/cooling-the-cpu-x11sdv-4c-tln2f.22285/&quot;&gt;cool the processor on this board&lt;/a&gt;, as Supermicro doesn’t sell the cooler separately or preinstalled, or so I thought, as one can’t find it on the website. After some mails with Supermicro, they say the cooler can be ordered, but it needs to be installed by them, otherwise you can say bye bye to the warranty.&lt;/p&gt;

&lt;p&gt;Luckly for me, the Supermicro reseller in Norway, &lt;a href=&quot;https://nextron.no&quot;&gt;Nextron&lt;/a&gt;, did order everything from me, and I would get the motherboard with a preinstalled cooler. Cool (pun intended). It took, however, a bit long to get it. The motherboards with a Xeon with more than 4 cores can be ordered with a cooler in a less bureaucratic way.&lt;/p&gt;

&lt;h3 id=&quot;memory&quot;&gt;Memory&lt;/h3&gt;

&lt;p&gt;That was an easy choice - got a &lt;a href=&quot;https://www.amazon.com/gp/product/B07DFLTWN3/ref=ppx_yo_dt_b_asin_title_o01_s00?ie=UTF8&amp;amp;psc=1&quot;&gt;Supermicro certified 64gb RAM&lt;/a&gt;. I was tempted to get two 32GB modules and get the interleave going, but, well, I can always get another 64GB in the future if I need it.&lt;/p&gt;

&lt;h3 id=&quot;case&quot;&gt;Case&lt;/h3&gt;

&lt;p&gt;I really liked those Fractal Design cases, so decided to go for the &lt;a href=&quot;https://www.fractal-design.com/products/cases/node/node-804/black/&quot;&gt;Node 804&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;other-stuff&quot;&gt;Other stuff&lt;/h3&gt;

&lt;p&gt;The other equipment I ordered:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;PSU: a &lt;a href=&quot;https://www.corsair.com/us/en/Categories/Products/Power-Supply-Units/Power-Supply-Units-Advanced/RMx-Series/p/CP-9020179-NA&quot;&gt;Corsair RM750X&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Storage: &lt;a href=&quot;https://www.intel.com/content/www/us/en/products/memory-storage/solid-state-drives/consumer-ssds/6-series/ssd-660p-series.html&quot;&gt;Intel 660p SSD&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;HBA: &lt;a href=&quot;https://www.ebay.com/itm/HP-H220-6Gbps-SAS-PCI-E-3-0-HBA-LSI-9207-8i-P20-IT-Mode-for-ZFS-FreeNAS-unRAID/162862201664?ssPageName=STRK%3AMEBIDX%3AIT&amp;amp;_trksid=p2057872.m2749.l2649&quot;&gt;This one&lt;/a&gt;, as it is already flashed with the right FreeNAS-friendly firmware&lt;/li&gt;
  &lt;li&gt;a few cables to connect the HBA to the hard disks.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;the-building&quot;&gt;The building&lt;/h2&gt;

&lt;p&gt;The installation of the motherboard into the case was as smooth as it can be for a first timer. It went well. The only few things that didn’t go according to the plan was that I didn’t manage to plug some of the stuff (HDD led, Power LED) into the motherboard, as I didn’t find where to plug them. It seems there was lacking ground connections for some of the cables. I also couldn’t get a stable mount of the hard disk, as the models I have - two 8TB Seagate Ironwolf - only have four screw holes, while the cage expects a 6 screws HD. Fractal Design’s support was kind enough to send me the adapters for this new type of drive, so I’ll install them as soon as I get them.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/2019/IMG_7533.jpg&quot; alt=&quot;an over view of my installation - halfway through&quot; title=&quot;Halfway through&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Everything mounted and all, so it was the time to press the power button. Scary. It didn’t work. I haven’t connected the cables to the power supply properly, so I did that and boom, things worked!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;../../assets/2019/itworks.JPG&quot; alt=&quot;It works!&quot; title=&quot;It works!&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I installed ESXi, and I noticed I could passthrough two SATA controllers, which made me thing that I had no need for the HBA I bought. Boom, I opened the case and removed the HBA. I connected the hard disks to one of the two miniSAS connectors, and to my surprise they were immediately recognized and imported by my FreeNAS VM.&lt;/p&gt;

&lt;p&gt;Overall, I am very happy with the machine, except for the noisy fan. I ordered a new fan to replace the one from Supermicro, but I don’t know if I will dare to remove the heatsink to install it. We’ll see. Now I’ve managed to follow some instructions on the net and reduced the fan speed to an acceptable noise level, while maintaining the CPU cool enough. Let’s see how that goes.&lt;/p&gt;

&lt;p&gt;UPDATE 4.9.2019: I didn’t have to remove the heatsink to replace the fan. It is a bit annoying, but it is possible to remove the fan cage only, which was much better than reapplying the thermal paste, and possibly voiding my warranty.&lt;/p&gt;

&lt;p&gt;I installed a Noctua fan that works well. It’s very silent, but I want to go back to the Supermicro cooler as soon as noise is not an issue, as it was way more efficient to cool the machine.&lt;/p&gt;

&lt;p&gt;The hard disks, however, were the culprit when it comes to the noise. When the FreeNAS VM is shut down, the machine is almost silent. I rearranged the disks, not having them all on the same cage, and it got them better airflow and temps.&lt;/p&gt;
</description>
        <pubDate>Sat, 17 Aug 2019 14:00:23 +0200</pubDate>
        <link>http://francisaugusto.com/2019/Building-a-Supermicro-based-Freenas/</link>
        <guid isPermaLink="true">http://francisaugusto.com/2019/Building-a-Supermicro-based-Freenas/</guid>
        
        <category>supermicro</category>
        
        <category>freenas</category>
        
        <category>esxi</category>
        
        
        <category>personal</category>
        
      </item>
    
      <item>
        <title>ESXi 6.7 on the 2018 Mac Mini - networking</title>
        <description>&lt;p&gt;&lt;em&gt;UPDATE&lt;/em&gt;: Aquantia went public. You can download the pre-release driver at this website &lt;a href=&quot;https://github.com/Aquantia/AQtion-esxi/releases&quot;&gt;https://github.com/Aquantia/AQtion-esxi/releases&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;My &lt;a href=&quot;https://www.uio.no&quot;&gt;workplace&lt;/a&gt; aquired a few of the 2018 Mac Mini’s so that we could upgrade our support for macOS users. Our plan was to use this machine as a cluster, ideally running ESXi on them. It was great when we read &lt;a href=&quot;https://www.virtuallyghetto.com/2018/11/esxi-on-the-new-2018-apple-mac-mini.html&quot;&gt;here&lt;/a&gt; that it appeared that ESXi 6.7 runs fine on those machines.&lt;/p&gt;

&lt;p&gt;Nevertheless it was disappointing to see that a lot of things don’t work:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The internal storage cannot be used&lt;/li&gt;
  &lt;li&gt;Thunderbolt controllers are not supported&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;For us it was even worse: the model we bought has 10Gb NICs, which lacks ESXi drivers. This means that we could not even install ESXi on the Mac Mini, as the installer seems to require a driver.&lt;/p&gt;

&lt;p&gt;Well, now we managed it.&lt;/p&gt;

&lt;p&gt;Following some good tutorials &lt;a href=&quot;https://www.v-front.de/2014/12/how-to-make-your-unsupported-nic-work.html&quot;&gt;here&lt;/a&gt; and &lt;a href=&quot;http://www.vm-help.com/forum/viewtopic.php?f=34&amp;amp;t=4340&quot;&gt;here&lt;/a&gt;, I started an attempt to port the &lt;a href=&quot;https://www.aquantia.com/support/driver-download/&quot;&gt;freely available Linux drivers&lt;/a&gt; from &lt;a href=&quot;https://www.aquantia.com&quot;&gt;Aquantia&lt;/a&gt;. This was not an easy task, as VMware does not document all that well how to setup the environment for building up things. After a while, with a proper configured CentOS environment, I started the process.&lt;/p&gt;

&lt;p&gt;But then I’ve hitten a wall, and couldn’t go further. On a desperate attempt, I contacted Aquantia to see if they were interesting into porting their Linux drivers to ESXi. Well, it turns out they were, and today I finally got a candidate version that worked amazingly well on our Mac Mini’s.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://francisaugusto.com/assets/2019/mac-mini-esxi.png&quot; alt=&quot;ESXi on 10Gb Mac Mini&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I haven’t tested it exhaustively so far, let alone on a 10Gb switch, but so far, so good.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://francisaugusto.com/assets/2019/aquantia-mac-mini.png&quot; alt=&quot;aquantia&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The Aquantia folks did all the job, so I’m really grateful. From what I understand they are going to release the driver in the near future when things are ready on their side.&lt;/p&gt;

&lt;p&gt;It’s great to know that the Mac Mini can be a viable option to run ESXi. Of course, because the Mac Mini is not a supported platform for ESXi, it is uncertain how things are going to be after VMWare drops support for Vmklinux-based drivers.&lt;/p&gt;

&lt;p&gt;On top of that, somethings to notice:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;I couldn’t get any storage - USB or USB-C - to work. Booting with storage plugged on a legacy USB port would do nothing at best and prevent booting at worse (I got an error once saying something aobut multiboot not being supported). Hot-plugging to USB/USB-C doesn’t get the device to show up, and booting with anything, I mean, ANYTHING, connected to a USB-C port would lead me to the purple screen of death (PSOD). So it’s gonna be either SAN or installing the ESXi on one of &lt;a href=&quot;https://www.samsung.com/semiconductor/minisite/ssd/product/portable/t5/&quot;&gt;these&lt;/a&gt; so that we can have some room for our VM’s. But maybe it needs to be &lt;a href=&quot;https://www.virten.net/2016/11/usb-devices-as-vmfs-datastore-in-vsphere-esxi-6-5/&quot;&gt;manually mounted&lt;/a&gt;?&lt;/li&gt;
  &lt;li&gt;The Aquantia driver worked fine on the internal NIC, but I couldn’t make the Apple USB Ethernet adapters to work - &lt;del&gt;these adapters apparently also use chipset from Aquantia&lt;/del&gt; these adapters use ASIX chipset ax88772A, not supported by the usb nic driver mentioned below, though it would be nice to test a legacy USB (not USB-C) adapter. Booting with a Realtek-based USB-C Ethernet adapter just gets me a PSOD, and I don’t have a Realtek based USB adapter, so I couldn’t test the &lt;a href=&quot;https://labs.vmware.com/flings/usb-network-native-driver-for-esxi&quot;&gt;USB NIC driver&lt;/a&gt;. I did inject it on my ISO, though.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Long story short, things look promising. Due to Apple licensing terms, we can only run a virtualized instance of macOS on Apple hardware. Using macOS VM’s could help us on our job, and the nice work of Aquantia is going to make that possible.&lt;/p&gt;

&lt;p&gt;Leave a message in the comments if you too are contemplating running ESXi on a 10Gb Mac Mini!&lt;/p&gt;

&lt;p&gt;(UPDATED on 13.3.2019 to correct info on Apple’s USB Ethernet adapter.)
(UPDATEd on 6.4.2019 to include information about the public availability of the driver.)&lt;/p&gt;
</description>
        <pubDate>Tue, 12 Mar 2019 19:34:23 +0100</pubDate>
        <link>http://francisaugusto.com/2019/ESXi-on-the-2018-Mac-Mini-networking/</link>
        <guid isPermaLink="true">http://francisaugusto.com/2019/ESXi-on-the-2018-Mac-Mini-networking/</guid>
        
        <category>esxi</category>
        
        <category>mac-mini</category>
        
        <category>aquantia</category>
        
        
        <category>personal</category>
        
      </item>
    
      <item>
        <title>WiFi Temperature Monitor</title>
        <description>&lt;p&gt;After finishing my &lt;a href=&quot;http://francisaugusto.com/2017/Homebrige-nexa-and-Udoo/&quot;&gt;previous project&lt;/a&gt;, I decided it was time to put a temperature sensor at my daughter’s room. Despite living in Norway for a while, I still suspect it is just colder than it should be.&lt;/p&gt;

&lt;p&gt;My goal was to transmit the temperature of her room to our &lt;a href=&quot;https://github.com/nfarina/homebridge&quot;&gt;Homebridge&lt;/a&gt;, so we could check it on our phone. I also wanted a solution that would allow me to switch the radio transmitter while not transferring data.&lt;/p&gt;

&lt;p&gt;I had a couple of DHT11 sensors around, and I decided to try the &lt;a href=&quot;https://www.sparkfun.com/products/13678&quot;&gt;ESP8266-01&lt;/a&gt;. I got them at &lt;a href=&quot;https://www.kjell.com&quot;&gt;Kjell &amp;amp; Co.&lt;/a&gt;, and, as usual, when going there I end up buying more than I need, so I got this &lt;a href=&quot;https://www.kjell.com/no/produkter/elektro-og-verktoy/elektronikk/optokomponenter/led-lcd-skjermer/luxorparts-grafisk-oled-skjerm-128-x-64-piksler-0-96--p87945&quot;&gt;OLED screen&lt;/a&gt;, which I then thought I could use to display the temperature (and humidity, since the DHT11 provides that as well) without my phone.&lt;/p&gt;

&lt;p&gt;The ESP8266 is used mainly to read the sensor and transmit the data to the computer running Homebridge. It transmits UDP packets, to make it simple. On the computer side, I use a small NodeJS app to receive the packets (and send and ACK back).&lt;/p&gt;

&lt;p&gt;I had a couple of Arduino Mini’s at home, which I never used because they didn’t have soldered pins to the GPIO’s. But I manned up and soldered some pins to it. Not the nicest job I ever did, but nothing got broken in the process.&lt;/p&gt;

&lt;p&gt;I added a button to the circuit, so that we could read the temperature with the touch of a button.&lt;/p&gt;

&lt;p&gt;It works like this:&lt;/p&gt;

&lt;p&gt;ESP8266: It keeps reading the sensor all the time, and transmitting the data via serial to the Arduino. In addition to that, the data is sent by WiFi to the Homebridge. The radio turns itself on, connects to the network, sends the packets and, upon after getting the confirmation that the packets were received, it turns itself off for 1 minute.&lt;/p&gt;

&lt;p&gt;Arduino: It receives the temperature and humidity info fromthe ESP8266, and then it shows it on a screen. The screen is off, and is turned on for 10 seconds when a button is pressed.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://francisaugusto.com/assets/ESP8266.JPG&quot; alt=&quot;It looks shabby, but it works&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It is not very elegant, because there was no space to put the Arduino on the small breadboard. I wanna improve it later by:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;changing the power supply to a small circuit to provide power (with voltage regulator and capacitors);&lt;/li&gt;
  &lt;li&gt;put an ATMega chip on the breadboard instead of an arduino.&lt;/li&gt;
  &lt;li&gt;order a pcb?&lt;/li&gt;
  &lt;li&gt;Get rid of the arduino and use a bigger ESP8266 instead.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Fri, 29 Dec 2017 20:13:23 +0100</pubDate>
        <link>http://francisaugusto.com/2017/WiFi-Temperature-Monitor/</link>
        <guid isPermaLink="true">http://francisaugusto.com/2017/WiFi-Temperature-Monitor/</guid>
        
        <category>projects</category>
        
        <category>homebridge</category>
        
        <category>arduino</category>
        
        <category>ESP8266</category>
        
        
        <category>personal</category>
        
      </item>
    
      <item>
        <title>Homebridge, Nexa switches and Udoo Neo</title>
        <description>&lt;p&gt;The year is ending and I would like to finish it with a cool project.&lt;/p&gt;

&lt;p&gt;I am a sucker for gadgets, especially small cheap computers like the &lt;a href=&quot;https://www.raspberrypi.org&quot;&gt;Raspberry Pi&lt;/a&gt;. Some years ago, I contributed to a &lt;a href=&quot;https://Kickstarter.com&quot;&gt;Kickstarter&lt;/a&gt; project called &lt;a href=&quot;https://www.udoo.org/get-started-neo/&quot;&gt;Udoo Neo&lt;/a&gt;, which is a credit-sized computer + Arduino. It also came with some sensors for measuring the temperature and barometric pressure. I used it as a tool to monitor the temperature on our living room and to run some experiments.&lt;/p&gt;

&lt;p&gt;I have lots of &lt;a href=&quot;https://arduino.cc&quot;&gt;Arduino boards&lt;/a&gt; that I used on other projects, such as an automatic system to water my plants. I wanted to experiment with 433mhz transmitters, mostly because they are cheap and I wanted to use them to study basic network concepts.&lt;/p&gt;

&lt;p&gt;On my flat we have some lights on our living room that are plugged to outlets and controlled via remote control. I use a cheap &lt;a href=&quot;https://nexa.se&quot;&gt;Nexa&lt;/a&gt; PE-3 kit. &lt;a href=&quot;https://www.clasohlson.com/no/Nexa-PE-3-3-pack-fjernstrømbrytere/36-4602&quot;&gt;This&lt;/a&gt; is the exact model.&lt;/p&gt;

&lt;p&gt;I realized that those Nexa outlets use the 433mhz frequency, so I kept thinking about controlling the lights plugged into them with an Arduino at some point, but didn’t have a reason for that (other than the gimmick aspect of it). That changed when I came across &lt;a href=&quot;https://medium.com/arvin-singla/apple-homekit-hacking-3d2902e7a1df&quot;&gt;this post&lt;/a&gt;, where the author describes how he used &lt;a href=&quot;https://github.com/nfarina/homebridge&quot;&gt;Homebridge&lt;/a&gt; to control his remote lights. But what is Homebridge?&lt;/p&gt;

&lt;p&gt;Well, if you are an Apple-fanboy like me, you know that Apple has a technology called HomeKit that allows you to control devices on your home from your iPhone, iPad or Apple TV. But there are not so many devices available for HomeKit yet, and those that are available  are expensive. Enter Homebridge, an open source project that allows you to create your own accessories for HomeKit. You see where I am going: if I can control my outlets with Arduino, maybe I could connect that with Homebridge and ta-daaa, I would be able to switch my lights on and off (as well as I could see my room’s temperature on my phone using a temperature sensor connected to the Udoo).&lt;/p&gt;

&lt;p&gt;As I said, I had an Udoo laying around, and lots of cheap 433 receivers and transmitters. So my goal was:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;to control my light switches with my Udoo Neo;&lt;/li&gt;
  &lt;li&gt;to install Homebridge on the Udoo Neo;&lt;/li&gt;
  &lt;li&gt;to be able to control my lights switches via my iPhone.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;controlling-my-light-switches-with-udoo-neo&quot;&gt;Controlling my light switches with Udoo Neo&lt;/h3&gt;

&lt;p&gt;There are many cool projects for the Arduino that allow you to record the commands you send from a 433mhz remote control and to send those command backs. Before trying with my Udoo Neo, I tried first with my Arduino, and these sketches/products worked fine:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;http://fritzing.org/media/fritzing-repo/projects/n/nexardu-illumination-smart-control/code/&quot;&gt;Sketches to learn and send back commands&lt;/a&gt;, which is a modification of &lt;a href=&quot;http://playground.arduino.cc/Code/HomeEasy&quot;&gt;this&lt;/a&gt;. I used &lt;a href=&quot;http://fritzing.org/media/fritzing-repo/projects/n/nexardu-illumination-smart-control/code/Nexa_Ok_3_RX.ino&quot;&gt;this sketch&lt;/a&gt; to learn the codes of my remote control, and then I used &lt;a href=&quot;https://github.com/calle-gunnarsson/NexaCtrl&quot;&gt;NexaCtrl&lt;/a&gt; to actually send the commands.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://433mhz.codeplex.com/SourceControl/latest#rc-switch-fork/RCTransmitter.cpp&quot;&gt;rc-switch-fork&lt;/a&gt; worked great as well. The original &lt;a href=&quot;https://github.com/sui77/rc-switch/wiki&quot;&gt;rc-switch&lt;/a&gt; didn’t work.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The problem is that &lt;em&gt;none of those worked on my Udoo Neo&lt;/em&gt;. You see, the Arduino on the Udoo Neo is not based on the AVR architecture of the “common” arduinos. Therefore, the solutions above didn’t work with my Udoo Neo. I suspect the libraries used by those packages rely on stuff available only to Arduinos based on AVR. I could simply connect an Arduino to the Udoo Neo and get this done, but I thought it would be a waste of resources.&lt;/p&gt;

&lt;p&gt;I then decided to give &lt;a href=&quot;http://arduinobasics.blogspot.no/2014/06/433-mhz-rf-module-with-arduino-tutorial.html&quot;&gt;this great tutorial&lt;/a&gt; a try. I have bookmarked it a while ago because it is not a tutorial for a ready-made solution - well, it offers that as well - but remember when I said I wanted to study some basic network concepts? This tutorial teaches how to recognize basic signals typically used for this kind of communication between devices and I always thought I could try to replicate what he did one day. Well, this day has come.&lt;/p&gt;

&lt;p&gt;What I did was that I used the &lt;a href=&quot;http://arduinobasics.blogspot.no/2014/07/433-mhz-rf-module-with-arduino-tutorial_30.html&quot;&gt;code he made to learn commands from a remote control&lt;/a&gt;, then I printed the array of each command for my remote control on Arduino’s serial monitor, and created another sketch where I hard coded the commands by pasting the array so that I could send these codes. Not super elegant, but it works.&lt;/p&gt;

&lt;p&gt;Since using the Arduino interface on the Udoo Neo is irritating (I access it via VNC), I decided to read the commands on an Arduino connected to my Mac, and transfer a sketch with the codes to the Udoo Neo. That sketch would read the serial interface, and when it receives a certain instruction from the Linux side of the Udoo Neo, it would then send the right code to turn a specific light on or off. The same scenario as if one were using a Raspberry Pi connected to an Arduino. It is also possible to send those signals using a Raspberry Pi, without an Arduino. I might try that at some point.&lt;/p&gt;

&lt;p&gt;It worked! It wasn’t as reliable as on the Arduino connected to my Mac - I have to power off the transmitter every time I am not using it, but it worked.&lt;/p&gt;

&lt;p&gt;Then I created a python script to send the commands via serial to the built-in Arduino of the Udoo Neo. Something like this:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;gt; python lightcontrol.py 1 off # turn the light 1 off
Light 1 is off
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After that was done, it was time to install Homebridge.&lt;/p&gt;

&lt;h3 id=&quot;installing-homebridge-on-the-udoo-neo&quot;&gt;Installing Homebridge on the Udoo Neo&lt;/h3&gt;

&lt;p&gt;I did it following &lt;a href=&quot;https://github.com/nfarina/homebridge/wiki/Running-HomeBridge-on-a-Raspberry-Pi&quot;&gt;this tutorial here&lt;/a&gt;. One note: make sure you are installing the absolutely latest version of NodeJS.&lt;/p&gt;

&lt;p&gt;I wasn’t familiar with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;npm&lt;/code&gt;, so I found strange that on the docs of the project or on &lt;a href=&quot;http://blog.theodo.fr/2017/08/make-siri-perfect-home-companion-devices-not-supported-apple-homekit/&quot;&gt;this excellent guide on how to write a Homebridge plugin&lt;/a&gt; it was always suggested to publish plugins to a plugin repository. I didn’t do it. I simply created a local plugin by creating a directory on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/usr/lib/node_modules&lt;/code&gt;, and then I created the proper &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.js&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;package.json&lt;/code&gt;. I don’t see a reason to make my plugin public, as I imagine that my solution is very tied to the system I am using. Of course, if anyone feels he might benefit from it, just drop me a note. Remember:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Your plugin must start with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;homebridge&lt;/code&gt;, for example, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;homebridge-myplugin&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Do not follow the code he shows on the tutorial, but rather &lt;a href=&quot;https://github.com/fredericbarthelet/homebridge-smappee/blob/master/index.js&quot;&gt;the code he actually wrote for his project&lt;/a&gt;. I found it more up to date.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The result is that now I can control all the lights on my room with my iPhone/Apple watch, even with Siri, with very cheap equipment I already had!&lt;/p&gt;

&lt;p&gt;This is how it looks:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;http://francisaugusto.com/assets/homebridge.png&quot; alt=&quot;This is how it looks&quot; /&gt;&lt;/p&gt;

&lt;p&gt;My &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;index.js&lt;/code&gt; file looks like this:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-javascript&quot; data-lang=&quot;javascript&quot;&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Service&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Characteristic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;module&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;exports&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;homebridge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;Service&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;homebridge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Service&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;Characteristic&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;homebridge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hap&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Characteristic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
          &lt;span class=&quot;nx&quot;&gt;homebridge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;registerAccessory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;homebridge-lightcontroller&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;LightController&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myLightController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;homebridge&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;registerAccessory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;homebridge-lightcontroller&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Temperature&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;myTemperature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myTemperature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serviceAccessory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Service&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AccessoryInformation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serviceAccessory&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setCharacteristic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Characteristic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Manufacturer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Francis&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serviceTemp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Service&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;TemperatureSensor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Living room temperature&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serviceTemp&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getCharacteristic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Characteristic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CurrentTemperature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getTemp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;myTemperature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getServices&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serviceAccessory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serviceTemp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;myTemperature&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getTemp&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;fs&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;readFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;/sys/class/i2c-dev/i2c-1/device/1-0048/temp1_input&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;utf8&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                    &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
                    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;
                &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;callback&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;parseFloat&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1000&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;myLightController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;command&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;acc&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;acc&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serviceAccessory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Service&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AccessoryInformation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serviceAccessory&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setCharacteristic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Characteristic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Manufacturer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Francis&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serviceSwitch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Service&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Switch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;My Light Controller&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serviceSwitch&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getCharacteristic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Characteristic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;On&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setPowerState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;myLightController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getServices&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serviceAccessory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serviceSwitch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;myLightController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setPowerState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;onOff&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;onOff&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nx&quot;&gt;onOff&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;off&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;comm&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;acc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onOff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serviceAccessory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Service&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AccessoryInformation&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serviceAccessory&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setCharacteristic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Characteristic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Manufacturer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Francis&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serviceSwitch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Service&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Switch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;My Light Controller&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serviceSwitch&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getCharacteristic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Characteristic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;On&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;set&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setPowerState&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;bind&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;));&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;myLightController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getServices&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt;
       &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serviceAccessory&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;serviceSwitch&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;myLightController&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;prototype&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;setPowerState&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;  &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;onOff&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
       &lt;span class=&quot;nx&quot;&gt;onOff&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
       &lt;span class=&quot;nx&quot;&gt;onOff&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;off&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;comm&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;acc&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; &lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onOff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
   &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;child_process&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
   &lt;span class=&quot;nx&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;comm&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;stderr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
       &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
                 &lt;span class=&quot;c1&quot;&gt;// node couldn't execute the command&lt;/span&gt;
                 &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;err&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
   &lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
   &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;next&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;The only caveat with this system is that if I turn the light off using the remote control, the state of the lamp on the Home app will not reflect the actual state. This is the only limitation, and it can be a problem if you are considering some form for automation, as the system might skip turning something on as the state is already on.&lt;/p&gt;
</description>
        <pubDate>Fri, 29 Dec 2017 20:13:23 +0100</pubDate>
        <link>http://francisaugusto.com/2017/Homebrige-nexa-and-Udoo/</link>
        <guid isPermaLink="true">http://francisaugusto.com/2017/Homebrige-nexa-and-Udoo/</guid>
        
        <category>projects</category>
        
        <category>homebridge</category>
        
        
        <category>personal</category>
        
      </item>
    
      <item>
        <title>A new blog is born!</title>
        <description>&lt;p&gt;I have blogged for many years, but in my native language (Portuguese). Now I feel it’s time to start blogging in English. I don’t think I will blog about anything that I want to discuss, but rather on technology, coding and privacy.&lt;/p&gt;

&lt;p&gt;I am still trying to understand how &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt; works, as I am a long time WordPress user. I love &lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown&lt;/a&gt;, and I always wanted to get used to write texts without all the fuss of text editors, formatting and the likes. So let’s see how that works. :)&lt;/p&gt;
</description>
        <pubDate>Tue, 21 Nov 2017 21:04:23 +0100</pubDate>
        <link>http://francisaugusto.com/2017/A-new-blog-is-born/</link>
        <guid isPermaLink="true">http://francisaugusto.com/2017/A-new-blog-is-born/</guid>
        
        
        <category>personal</category>
        
      </item>
    
  </channel>
</rss>
